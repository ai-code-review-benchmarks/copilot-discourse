openapi: 3.0.0
info:
  title: "Discourse API"
  version: "1.0.0" # Using "1.0.0" as specific Discourse version is not known.
  description: "OpenAPI specification for the Discourse API, including core functionalities and plugins like Automation, Chat, Narrative Bot, and Styleguide."
  contact:
    name: "Discourse Team"
    url: "https://www.discourse.org"
    email: "team@discourse.org"
security:
  - ApiDiscourseKey: []
paths:
  /404:
    get:
      summary: Not Found
      operationId: exceptions#notFound
      responses:
        '200':
          description: Success
components:
  securitySchemes:
    ApiDiscourseKey:
      type: apiKey
      in: header
      name: Api-Key # Standard Discourse API Key header
      description: API Key for Discourse. Passed in the Api-Key header.
  schemas:
    UserBasic:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        username:
          type: string
          description: Username
        avatar_template:
          type: string
          description: URL template for user's avatar
    UserExtended:
      allOf:
        - $ref: '#/components/schemas/UserBasic'
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: Full name of the user
        email:
          type: string
          format: email
          description: User's email address
        last_seen_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
    Post:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        topic_id:
          type: integer
        cooked:
          type: string
          description: HTML content of the post
        raw:
          type: string
          description: Raw Markdown content of the post
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        reply_count:
          type: integer
        post_number:
          type: integer
    Topic:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        slug:
          type: string
        user_id:
          type: integer
        category_id:
          type: integer
          nullable: true
        posts_count:
          type: integer
        views:
          type: integer
        pinned:
          type: boolean
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_posted_at:
          type: string
          format: date-time
          nullable: true
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        color:
          type: string
          description: Hex color code for the category
        text_color:
          type: string
          description: Hex color code for text on the category
        topic_count:
          type: integer
        post_count:
          type: integer
        description:
          type: string
          nullable: true
        description_text:
          type: string
          nullable: true
        read_restricted:
          type: boolean
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        user_count:
          type: integer
        mentionable:
          type: boolean
        messageable:
          type: boolean
        visibility_level:
          type: integer
        automatic:
          type: boolean
        flair_url:
          type: string
          nullable: true
        flair_bg_color:
          type: string
          nullable: true
        flair_color:
          type: string
          nullable: true
    Notification:
      type: object
      properties:
        id:
          type: integer
        notification_type:
          type: integer # This is actually an enum in Discourse, represented by numbers
        user_id:
          type: integer
        read:
          type: boolean
        data: # This can be complex, a generic object for now
          type: object
          properties:
            topic_title:
              type: string
            original_post_id:
              type: integer
            original_post_type:
              type: integer
            original_username:
              type: string
            display_username:
              type: string
        post_number:
          type: integer
          nullable: true
        topic_id:
          type: integer
          nullable: true
        fancy_title:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
    Tag:
      type: object
      properties:
        id:
          type: string # Tags are often referenced by name
        name:
          type: string
        topic_count:
          type: integer
        staff:
          type: boolean
    Badge:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        image_url:
          type: string
          nullable: true
        badge_type_id:
          type: integer
        grant_count:
          type: integer
        enabled:
          type: boolean
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
        cooked:
          type: string
        user:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
          nullable: true
        deleted_by_id:
          type: integer
          nullable: true
    ChatChannel:
      type: object
      properties:
        id:
          type: integer # Or string if UUID, assuming integer for now
        chatable_type:
          type: string
          description: "Type of the chatable (e.g., Topic, Category, DirectMessageChannel)"
        chatable_id:
          type: integer # Or string depending on chatable_type
        title:
          type: string
          nullable: true
        status:
          type: string
          enum: [open, closed, read_only, archived]
        last_message_sent_at:
          type: string
          format: date-time
        chatable_url:
          type: string
          nullable: true
        current_user_membership:
          type: object # Simplified for now
          properties:
            following:
              type: boolean
            muted:
              type: boolean
            desktop_notification_level:
              type: string
            mobile_notification_level:
              type: string
    ChatThread:
      type: object
      properties:
        id:
          type: integer
        chat_channel_id:
          type: integer # Or string, matching ChatChannel.id
        title:
          type: string
          nullable: true
        user:
          $ref: '#/components/schemas/UserBasic'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        message_count:
          type: integer
        last_message_sent_at:
          type: string
          format: date-time
    Automation:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        enabled:
          type: boolean
        script:
          type: object # This can be complex, specific fields depend on script type
        trigger:
          type: object # This can be complex, specific fields depend on trigger type
        last_triggered_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SuccessResponse: # A generic success response
      type: object
      properties:
        success:
          type: string
          example: "OK"
        status: # Some endpoints return status
          type: string
          example: "OK"
        message: # Some endpoints return a message
          type: string
    ErrorResponse: # A generic error response
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
        errors:
          type: array
          items:
            type: string
        message: # Sometimes error messages are in 'message'
          type: string
  # Routes from plugins/automation/config/routes.rb
  /automations/{id}/trigger:
    post:
      summary: Trigger Automation
      operationId: automations#trigger
      parameters:
        - name: id
          in: path
          required: true
          description: Automation ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
      # AdminConstraint.new applies
  /user-global-notices/{id}:
    delete:
      summary: Delete User Global Notice
      operationId: user_global_notices#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: User Global Notice ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /append-last-checked-by/{post_id}:
    put:
      summary: Append Last Checked By to Post
      operationId: append_last_checked_by#post_checked
      parameters:
        - name: post_id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /admin/plugins/automation/automation:
    get:
      summary: Admin Automation Index Page
      operationId: admin#index # From discourse_automation/admin
      responses:
        '200':
          description: Success (HTML)
      # AdminConstraint.new applies
  /admin/plugins/automation/automation/new:
    get:
      summary: Admin New Automation Page
      operationId: admin#new # From discourse_automation/admin
      responses:
        '200':
          description: Success (HTML)
      # AdminConstraint.new applies
  /admin/plugins/automation/automation/{id}:
    get:
      summary: Admin Edit Automation Page
      operationId: admin#edit # From discourse_automation/admin
      parameters:
        - name: id
          in: path
          required: true
          description: Automation ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success (HTML)
      # AdminConstraint.new applies
  /admin/plugins/automation/scriptables:
    get:
      summary: Admin List Scriptables
      operationId: admin_scriptables#index # From discourse_automation/admin_scriptables
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Automation' # Assuming a list of scriptables
      # AdminConstraint.new applies
  /admin/plugins/automation/triggerables:
    get:
      summary: Admin List Triggerables
      operationId: admin_triggerables#index # From discourse_automation/admin_triggerables
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Automation' # Assuming a list of triggerables
      # AdminConstraint.new applies
  /admin/plugins/automation/automations:
    get:
      summary: Admin List Automations
      operationId: admin_automations#index # From discourse_automation/admin_automations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
      # AdminConstraint.new applies
    post:
      summary: Admin Create Automation
      operationId: admin_automations#create # From discourse_automation/admin_automations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
      # AdminConstraint.new applies
  /admin/plugins/automation/automations/{id}:
    get:
      summary: Admin Show Automation
      operationId: admin_automations#show # From discourse_automation/admin_automations
      parameters:
        - name: id
          in: path
          required: true
          description: Automation ID
          schema:
            type: string # Assuming ID can be non-numeric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Automation'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
      # AdminConstraint.new applies
    put:
      summary: Admin Update Automation
      operationId: admin_automations#update # From discourse_automation/admin_automations
      parameters:
        - name: id
          in: path
          required: true
          description: Automation ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
      # AdminConstraint.new applies
  /admin/plugins/automation/automations/{automation_id}: # Note parameter name change for delete
    delete:
      summary: Admin Delete Automation
      operationId: admin_automations#destroy # From discourse_automation/admin_automations
      parameters:
        - name: automation_id # Changed from :id in route to :automation_id
          in: path
          required: true
          description: Automation ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post' # Assuming cooked content is part of Post
      # AdminConstraint.new applies
  /p/{post_id}:
    get:
      summary: Get Short Link for Post
      operationId: posts#short_link
      parameters:
        - name: post_id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (Redirect or JSON)
  /p/{post_id}/{user_id}:
    get:
      summary: Get Short Link for Post (with User ID)
      operationId: posts#short_link
      parameters:
        - name: post_id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
        - name: user_id
          in: path
          required: true # Though optional in route definition, typically present
          description: User ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (Redirect or JSON)
  /posts/{id}/cooked:
    get:
      summary: Get Cooked Post Content
      operationId: posts#cooked
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Placeholder for expand_embed response
                properties:
                  success:
                    type: boolean
                  # Add other relevant properties
  /posts/{id}/expand-embed:
    get:
      summary: Expand Embed in Post
      operationId: posts#expand_embed
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Assuming a generic success for now
    put:
      summary: Update Invite
      operationId: invites#update
      requestBody:
        content:
          application/json:
            schema:
              type: object # Define Invite update schema
              properties:
                email:
                  type: string
                  format: email
                group_ids:
                  type: array
                  items:
                    type: integer
                # Add other updatable fields
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or an Invite schema
    delete:
      summary: Delete Invite
      operationId: invites#destroy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /posts/{id}/raw:
    get:
      summary: Get Raw Markdown of Post
      operationId: posts#markdown_id
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (plain text)
  /posts/{id}/raw-email:
    get:
      summary: Get Raw Email of Post
      operationId: posts#raw_email
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (plain text)
  /raw/{topic_id}:
    get:
      summary: Get Raw Markdown of Topic (first post)
      operationId: posts#markdown_num
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (plain text)
  /raw/{topic_id}/{post_number}:
    get:
      summary: Get Raw Markdown of Post in Topic
      operationId: posts#markdown_num
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: post_number
          in: path
          required: true
          description: Post number
          schema:
            type: integer
      responses:
        '200':
          description: Success (plain text)
  /invites:
    post:
      summary: Create Invite
      operationId: invites#create
      responses:
        '200':
          description: Success
    put:
      summary: Update Invite
      operationId: invites#update
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Invite
      operationId: invites#destroy
      responses:
        '200':
          description: Success
  /invites/{id}:
    get:
      summary: Show Invite
      operationId: invites#show
      parameters:
        - name: id
          in: path
          required: true
          description: Invite ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success (HTML)
  /invites/create-multiple:
    post:
      summary: Create Multiple Invites
      operationId: invites#create_multiple
      responses:
        '200':
          description: Success (JSON)
          content:
            application/json:
              schema:
                type: object
                properties:
                  invites:
                    type: array
                    items:
                      type: object # Define simplified Invite schema for multiple creation
                      properties:
                        email:
                          type: string
                        # Add other relevant fields
                  # Add other response fields
  /tags:
    get:
      summary: List Tags
      operationId: tags#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  /tags/filter/list:
    get:
      summary: List Tags (Filter List)
      operationId: tags#index # Same as /tags
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  /tags/filter/search:
    get:
      summary: Search Tags (Filter Search)
      operationId: tags#search
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define search results schema
                properties:
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
                  # Add other search result properties
  /tags/list:
    get:
      summary: List All Tags
      operationId: tags#list
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  /tags/personal_messages/{username}:
    get:
      summary: Get Personal Message Tags for User
      operationId: tags#personal_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define PM tags response
                properties:
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
  /tags/upload:
    post:
      summary: Upload Tags (Admin)
      operationId: tags#upload
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or a more specific upload response
  /tags/unused:
    get:
      summary: List Unused Tags (Admin)
      operationId: tags#list_unused
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    delete:
      summary: Delete Unused Tags (Admin)
      operationId: tags#destroy_unused
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /tags/c/*category_slug_path_with_id/none/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (No Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (All Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/none/{tag_id}:
    get:
      summary: Show Tag in Category (No Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}:
    get:
      summary: Show Tag in Category (All Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (Default Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}:
    get:
      summary: Show Tag in Category (Default Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/intersection/{tag_id}/*additional_tag_ids:
    get:
      summary: Show Intersection of Tags
      operationId: tags#show
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Primary Tag ID or name
          schema:
            type: string
        - name: additional_tag_ids
          in: path
          required: true
          description: Additional Tag IDs or names (comma-separated or slash-separated)
          schema:
            type: string # Actual parsing might be more complex
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/*tag_id: # Catch-all for tags, redirects
    get:
      summary: Redirect Tag
      operationId: redirect
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /tag_groups:
    get:
      summary: List Tag Groups (Staff)
      operationId: tag_groups#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group' # Assuming TagGroup is similar to Group
    post:
      summary: Create Tag Group (Staff)
      operationId: tag_groups#create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group' # Or a specific TagGroupCreate schema
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /tag_groups/new:
    get:
      summary: New Tag Group Form (Staff)
      operationId: tag_groups#new
      responses:
        '200':
          description: Success
  /tag_groups/filter/search:
    get:
      summary: Search Tag Groups (Staff)
      operationId: tag_groups#search
      responses:
        '200':
          description: Success (JSON)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group' # Assuming TagGroup
  /tag_groups/{id}:
    get:
      summary: Get Tag Group Details (Staff)
      operationId: tag_groups#show
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group' # Assuming TagGroup
    put:
      summary: Update Tag Group (Staff)
      operationId: tag_groups#update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group' # Or a specific TagGroupUpdate schema
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    delete:
      summary: Delete Tag Group (Staff)
      operationId: tag_groups#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /t/{topic_id}/view-stats.json:
    get:
      summary: Get Topic View Stats
      operationId: topic_view_stats#index
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
          content:
            application/json:
              schema:
                type: object # Define TopicViewStats schema
                properties:
                  view_count:
                    type: integer
                  # Add other stats properties
  /custom:
    get:
      summary: Custom Home Page
      operationId: home_page#custom
      responses:
        '200':
          description: Success (HTML)
  /user-api-key/new:
    get:
      summary: New User API Key Form
      operationId: user_api_keys#new
      responses:
        '200':
          description: Success (HTML)
  /user-api-key:
    post:
      summary: Create User API Key
      operationId: user_api_keys#create
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or a UserApiKey schema
  /user-api-key/revoke:
    post:
      summary: Revoke User API Key
      operationId: user_api_keys#revoke
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /user-api-key/undo-revoke:
    post:
      summary: Undo Revoke User API Key
      operationId: user_api_keys#undo_revoke
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /user-api-key/otp:
    get:
      summary: Get User API Key OTP
      operationId: user_api_keys#otp
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define OTP schema
                properties:
                  otp:
                    type: string
    post:
      summary: Create User API Key OTP
      operationId: user_api_keys#create_otp
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or OTP creation response
  /user-api-key-client:
    get:
      summary: Show User API Key Client
      operationId: user_api_key_clients#show
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define UserApiKeyClient schema
                properties:
                  client_id:
                    type: string
                  # Add other client properties
    post:
      summary: Create User API Key Client
      operationId: user_api_key_clients#create
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or UserApiKeyClient schema
  /safe-mode:
    get:
      summary: Safe Mode Index
      operationId: safe_mode#index
      responses:
        '200':
          description: Success (HTML)
    post:
      summary: Enter Safe Mode
      operationId: safe_mode#enter
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /theme-qunit:
    get:
      summary: Theme QUnit Tests
      operationId: qunit#theme
      responses:
        '200':
          description: Success (HTML)
  /theme-tests: # Redirect
    get:
      summary: Redirect to Theme QUnit Tests
      operationId: redirect
      responses:
        '302':
          description: Redirect
  /testem-theme-qunit/{testem_id}/theme-qunit: # Development only
    get:
      summary: Theme QUnit Tests (Testem)
      operationId: qunit#theme
      parameters:
        - name: testem_id
          in: path
          required: true
          description: Testem ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /push_notifications/subscribe:
    post:
      summary: Subscribe to Push Notifications
      operationId: push_notification#subscribe
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /push_notifications/unsubscribe:
    post:
      summary: Unsubscribe from Push Notifications
      operationId: push_notification#unsubscribe
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /csp_reports:
    post:
      summary: Create CSP Report
      operationId: csp_reports#create
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /permalink-check:
    get:
      summary: Check Permalink
      operationId: permalinks#check
      responses:
        '200':
          description: Success
  /do-not-disturb:
    post:
      summary: Create Do Not Disturb Setting
      operationId: do_not_disturb#create
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or DNDSetting schema
    delete:
      summary: Delete Do Not Disturb Setting
      operationId: do_not_disturb#destroy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /presence/update:
    post:
      summary: Update User Presence
      operationId: presence#update
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /presence/get:
    get:
      summary: Get User Presence
      operationId: presence#get
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define Presence schema
                properties:
                  user_id:
                    type: integer
                  status:
                    type: string
                  # Add other presence properties
  /user-status:
    get:
      summary: Get User Status
      operationId: user_status#get
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define UserStatus schema
                properties:
                  status:
                    type: string
                  description:
                    type: string
                  emoji:
                    type: string
    put:
      summary: Set User Status
      operationId: user_status#set
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                description:
                  type: string
                emoji:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or UserStatus schema
    delete:
      summary: Clear User Status
      operationId: user_status#clear
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /sidebar_sections:
    get:
      summary: List Sidebar Sections
      operationId: sidebar_sections#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object # Define SidebarSection schema
    post:
      summary: Create Sidebar Section
      operationId: sidebar_sections#create
      requestBody:
        content:
          application/json:
            schema:
              type: object # Define SidebarSection schema for creation
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define SidebarSection schema
    put:
      summary: Update Sidebar Section
      operationId: sidebar_sections#update
      requestBody:
        content:
          application/json:
            schema:
              type: object # Define SidebarSection schema for update
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define SidebarSection schema
    delete:
      summary: Delete Sidebar Section
      operationId: sidebar_sections#destroy
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /sidebar_sections/reset/{id}:
    put:
      summary: Reset Sidebar Section
      operationId: sidebar_sections#reset
      parameters:
        - name: id
          in: path
          required: true
          description: Sidebar Section ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse' # Or updated SidebarSection
  /pageview:
    post:
      summary: Track Pageview
      operationId: pageview#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
  /form-templates/{id}:
    get:
      summary: Show Form Template (Public)
      operationId: form_templates#show
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object # Define FormTemplate schema
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  template:
                    type: string # Actual template structure
                  # Add other properties
  /form-templates:
    get:
      summary: List Form Templates (Public)
      operationId: form_templates#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormTemplate' # Assuming FormTemplate schema
  /emojis:
    get:
      summary: List Emojis
      operationId: emojis#index
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object # Define Emoji schema
                  properties:
                    name:
                      type: string
                    url:
                      type: string
  /emojis/search-aliases:
    get:
      summary: Search Emoji Aliases
      operationId: emojis#search_aliases
      responses:
        '200':
          description: Success (JSON)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string # Emoji aliases
  /test_net_http_timeouts: # Test only
    get:
      summary: Test Net::HTTP Timeouts
      operationId: test_requests#test_net_http_timeouts
      responses:
        '200':
          description: Success
  /test_net_http_headers: # Test only
    get:
      summary: Test Net::HTTP Headers
      operationId: test_requests#test_net_http_headers
      responses:
        '200':
          description: Success
  /bootstrap/plugin-css-for-tests.css: # Test/Dev only
    get:
      summary: Plugin CSS for Tests
      operationId: bootstrap#plugin_css_for_tests
      responses:
        '200':
          description: Success (CSS)
  /bootstrap/core-css-for-tests.css: # Test/Dev only
    get:
      summary: Core CSS for Tests
      operationId: bootstrap#core_css_for_tests
      responses:
        '200':
          description: Success (CSS)
  /favicon.ico: # Test only
    get:
      summary: Favicon (Test Stub)
      operationId: favicon_stub
      responses:
        '200':
          description: Success
  # Mounted engines Sidekiq and Logster are intentionally omitted
  # as they are external dependencies and their paths can be conditional.
  # The catch-all permalink route /*url is also omitted due to its broad nature.
  # Dynamic root routes based on SiteSetting.homepage are omitted for clarity.
  /tags:
    get:
      summary: List Tags
      operationId: tags#index
      responses:
        '200':
          description: Success
  /tags/filter/list:
    get:
      summary: List Tags (Filter List)
      operationId: tags#index # Same as /tags
      responses:
        '200':
          description: Success
  /tags/filter/search:
    get:
      summary: Search Tags (Filter Search)
      operationId: tags#search
      responses:
        '200':
          description: Success
  /tags/list:
    get:
      summary: List All Tags
      operationId: tags#list
      responses:
        '200':
          description: Success
  /tags/personal_messages/{username}:
    get:
      summary: Get Personal Message Tags for User
      operationId: tags#personal_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /tags/upload:
    post:
      summary: Upload Tags (Admin)
      operationId: tags#upload
      responses:
        '200':
          description: Success
  /tags/unused:
    get:
      summary: List Unused Tags (Admin)
      operationId: tags#list_unused
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Unused Tags (Admin)
      operationId: tags#destroy_unused
      responses:
        '200':
          description: Success
  /tags/c/*category_slug_path_with_id/none/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (No Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (All Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/none/{tag_id}:
    get:
      summary: Show Tag in Category (No Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}:
    get:
      summary: Show Tag in Category (All Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (Default Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}:
    get:
      summary: Show Tag in Category (Default Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/intersection/{tag_id}/*additional_tag_ids:
    get:
      summary: Show Intersection of Tags
      operationId: tags#show
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Primary Tag ID or name
          schema:
            type: string
        - name: additional_tag_ids
          in: path
          required: true
          description: Additional Tag IDs or names (comma-separated or slash-separated)
          schema:
            type: string # Actual parsing might be more complex
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/*tag_id: # Catch-all for tags, redirects
    get:
      summary: Redirect Tag
      operationId: redirect
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /tag_groups:
    get:
      summary: List Tag Groups (Staff)
      operationId: tag_groups#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Tag Group (Staff)
      operationId: tag_groups#create
      responses:
        '200':
          description: Success
  /tag_groups/new:
    get:
      summary: New Tag Group Form (Staff)
      operationId: tag_groups#new
      responses:
        '200':
          description: Success
  /tag_groups/filter/search:
    get:
      summary: Search Tag Groups (Staff)
      operationId: tag_groups#search
      responses:
        '200':
          description: Success (JSON)
  /tag_groups/{id}:
    get:
      summary: Get Tag Group Details (Staff)
      operationId: tag_groups#show
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Update Tag Group (Staff)
      operationId: tag_groups#update
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Tag Group (Staff)
      operationId: tag_groups#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /t/{topic_id}/view-stats.json:
    get:
      summary: Get Topic View Stats
      operationId: topic_view_stats#index
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  /custom:
    get:
      summary: Custom Home Page
      operationId: home_page#custom
      responses:
        '200':
          description: Success (HTML)
  /user-api-key/new:
    get:
      summary: New User API Key Form
      operationId: user_api_keys#new
      responses:
        '200':
          description: Success (HTML)
  /user-api-key:
    post:
      summary: Create User API Key
      operationId: user_api_keys#create
      responses:
        '200':
          description: Success
  /user-api-key/revoke:
    post:
      summary: Revoke User API Key
      operationId: user_api_keys#revoke
      responses:
        '200':
          description: Success
  /user-api-key/undo-revoke:
    post:
      summary: Undo Revoke User API Key
      operationId: user_api_keys#undo_revoke
      responses:
        '200':
          description: Success
  /user-api-key/otp:
    get:
      summary: Get User API Key OTP
      operationId: user_api_keys#otp
      responses:
        '200':
          description: Success
    post:
      summary: Create User API Key OTP
      operationId: user_api_keys#create_otp
      responses:
        '200':
          description: Success
  /user-api-key-client:
    get:
      summary: Show User API Key Client
      operationId: user_api_key_clients#show
      responses:
        '200':
          description: Success
    post:
      summary: Create User API Key Client
      operationId: user_api_key_clients#create
      responses:
        '200':
          description: Success
  /safe-mode:
    get:
      summary: Safe Mode Index
      operationId: safe_mode#index
      responses:
        '200':
          description: Success (HTML)
    post:
      summary: Enter Safe Mode
      operationId: safe_mode#enter
      responses:
        '200':
          description: Success
  /theme-qunit:
    get:
      summary: Theme QUnit Tests
      operationId: qunit#theme
      responses:
        '200':
          description: Success (HTML)
  /theme-tests: # Redirect
    get:
      summary: Redirect to Theme QUnit Tests
      operationId: redirect
      responses:
        '302':
          description: Redirect
  /testem-theme-qunit/{testem_id}/theme-qunit: # Development only
    get:
      summary: Theme QUnit Tests (Testem)
      operationId: qunit#theme
      parameters:
        - name: testem_id
          in: path
          required: true
          description: Testem ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /push_notifications/subscribe:
    post:
      summary: Subscribe to Push Notifications
      operationId: push_notification#subscribe
      responses:
        '200':
          description: Success
  /push_notifications/unsubscribe:
    post:
      summary: Unsubscribe from Push Notifications
      operationId: push_notification#unsubscribe
      responses:
        '200':
          description: Success
  /csp_reports:
    post:
      summary: Create CSP Report
      operationId: csp_reports#create
      responses:
        '200':
          description: Success
  /permalink-check:
    get:
      summary: Check Permalink
      operationId: permalinks#check
      responses:
        '200':
          description: Success
  /do-not-disturb:
    post:
      summary: Create Do Not Disturb Setting
      operationId: do_not_disturb#create
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Do Not Disturb Setting
      operationId: do_not_disturb#destroy
      responses:
        '200':
          description: Success
  /presence/update:
    post:
      summary: Update User Presence
      operationId: presence#update
      responses:
        '200':
          description: Success
  /presence/get:
    get:
      summary: Get User Presence
      operationId: presence#get
      responses:
        '200':
          description: Success
  /user-status:
    get:
      summary: Get User Status
      operationId: user_status#get
      responses:
        '200':
          description: Success
    put:
      summary: Set User Status
      operationId: user_status#set
      responses:
        '200':
          description: Success
    delete:
      summary: Clear User Status
      operationId: user_status#clear
      responses:
        '200':
          description: Success
  /sidebar_sections:
    get:
      summary: List Sidebar Sections
      operationId: sidebar_sections#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Sidebar Section
      operationId: sidebar_sections#create
      responses:
        '200':
          description: Success
    put:
      summary: Update Sidebar Section
      operationId: sidebar_sections#update
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Sidebar Section
      operationId: sidebar_sections#destroy
      responses:
        '200':
          description: Success
  /sidebar_sections/reset/{id}:
    put:
      summary: Reset Sidebar Section
      operationId: sidebar_sections#reset
      parameters:
        - name: id
          in: path
          required: true
          description: Sidebar Section ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /pageview:
    post:
      summary: Track Pageview
      operationId: pageview#index
      responses:
        '200':
          description: Success
  /form-templates/{id}:
    get:
      summary: Show Form Template (Public)
      operationId: form_templates#show
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /form-templates:
    get:
      summary: List Form Templates (Public)
      operationId: form_templates#index
      responses:
        '200':
          description: Success
  /emojis:
    get:
      summary: List Emojis
      operationId: emojis#index
      responses:
        '200':
          description: Success
  /emojis/search-aliases:
    get:
      summary: Search Emoji Aliases
      operationId: emojis#search_aliases
      responses:
        '200':
          description: Success (JSON)
  /test_net_http_timeouts: # Test only
    get:
      summary: Test Net::HTTP Timeouts
      operationId: test_requests#test_net_http_timeouts
      responses:
        '200':
          description: Success
  /test_net_http_headers: # Test only
    get:
      summary: Test Net::HTTP Headers
      operationId: test_requests#test_net_http_headers
      responses:
        '200':
          description: Success
  # Note: The catch-all permalink route /*url is intentionally omitted
  # as it's too broad for a useful OpenAPI specification without specific examples.
  # Also, dynamic root routes based on SiteSetting.homepage are omitted for clarity.
  /bootstrap/plugin-css-for-tests.css: # Test/Dev only
    get:
      summary: Plugin CSS for Tests
      operationId: bootstrap#plugin_css_for_tests
      responses:
        '200':
          description: Success (CSS)
  /bootstrap/core-css-for-tests.css: # Test/Dev only
    get:
      summary: Core CSS for Tests
      operationId: bootstrap#core_css_for_tests
      responses:
        '200':
          description: Success (CSS)
  /favicon.ico: # Test only
    get:
      summary: Favicon (Test Stub)
      operationId: favicon_stub
      responses:
        '200':
          description: Success
  # Mounted engines (Sidekiq, Logster) are noted here but not fully defined.
  # Their paths might vary based on environment and constraints.
  # /sidekiq: (Sidekiq::Web)
  # /logs: (Logster::Web)
  # Routes from plugins/styleguide/config/routes.rb
  /styleguide:
    get:
      summary: Show Styleguide Index
      operationId: styleguide#index
      responses:
        '200':
          description: Success, returns HTML styleguide page
          content:
            text/html:
              schema:
                type: string
  /styleguide/{category}/{section}:
    get:
      summary: Show Styleguide Category/Section
      operationId: styleguide#index
      parameters:
        - name: category
          in: path
          required: true
          description: Styleguide category
          schema:
            type: string
        - name: section
          in: path
          required: true
          description: Styleguide section within the category
          schema:
            type: string
      responses:
        '200':
          description: Success, returns HTML styleguide page for the specified category/section
          content:
            text/html:
              schema:
                type: string

  # Routes from plugins/discourse-narrative-bot/config/routes.rb
  /discobot/certificate:
    get:
      summary: Generate Discobot Certificate
      operationId: discobot/certificates#generate
      responses:
        '200':
          description: Success, returns SVG certificate
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary # Indicates binary content, suitable for images

  # Routes from plugins/chat/config/routes.rb, prefixed with /chat
  /chat/api/chatables:
    get:
      summary: List chatables
      operationId: chat#api/chatables#index
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels:
    get:
      summary: List chat channels
      operationId: chat#api/channels#index
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    post:
      summary: Create chat channel
      operationId: chat#api/channels#create
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/me/channels:
    get:
      summary: List current user's chat channels
      operationId: chat#api/current_user_channels#index
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/me/threads:
    get:
      summary: List current user's chat threads
      operationId: chat#api/current_user_threads#index
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/read:
    put:
      summary: Mark all channels as read for current user
      operationId: chat#api/channels_read#update_all
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/read:
    put:
      summary: Mark a specific channel as read for current user
      operationId: chat#api/channels_read#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string # Assuming it can be numeric or UUID
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/{message_id}/flags:
    post:
      summary: Flag a chat message
      operationId: chat#api/channels_messages_flags#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/drafts:
    post:
      summary: Create a chat draft
      operationId: chat#api/channels_drafts#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/{message_id}/interactions:
    post:
      summary: Interact with a chat message (e.g., react)
      operationId: chat#api/channels_messages_interactions#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}:
    delete:
      summary: Delete a chat channel
      operationId: chat#api/channels#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    put:
      summary: Update a chat channel
      operationId: chat#api/channels#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    get:
      summary: Get chat channel details
      operationId: chat#api/channels#show
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/status:
    put:
      summary: Update chat channel status
      operationId: chat#api/channels_status#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages:
    get:
      summary: List messages in a chat channel
      operationId: chat#api/channel_messages#index
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    delete:
      summary: Bulk delete messages in a chat channel
      operationId: chat#api/channel_messages#bulk_destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/{message_id}:
    put:
      summary: Update a chat message
      operationId: chat#api/channel_messages#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    delete:
      summary: Delete a chat message
      operationId: chat#api/channel_messages#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/moves:
    post:
      summary: Move chat messages
      operationId: chat#api/channels_messages_moves#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/{message_id}/streaming:
    delete:
      summary: Stop streaming a chat message (e.g., AI response)
      operationId: chat#api/channels_messages_streaming#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/invites:
    post:
      summary: Invite users to a chat channel
      operationId: chat#api/channels_invites#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/archives:
    post:
      summary: Archive a chat channel
      operationId: chat#api/channels_archives#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/memberships:
    get:
      summary: List memberships of a chat channel
      operationId: chat#api/channels_memberships#index
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    post:
      summary: Create a membership for a chat channel
      operationId: chat#api/channels_memberships#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/memberships/me:
    delete:
      summary: Current user leave a chat channel
      operationId: chat#api/channels_current_user_membership#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    put:
      summary: Update current user's membership for a chat channel
      operationId: chat#api/channels_current_user_membership#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    post:
      summary: Current user join a chat channel
      operationId: chat#api/channels_current_user_membership#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/memberships/{user_id}:
    delete:
      summary: Remove a user's membership from a chat channel
      operationId: chat#api/channels_memberships#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/memberships/me/follows:
    delete:
      summary: Current user unfollow a chat channel
      operationId: chat#api/channels_current_user_membership_follows#destroy
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/notifications-settings/me:
    put:
      summary: Update current user's notification settings for a chat channel
      operationId: chat#api/channels_current_user_notifications_settings#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/category-chatables/{id}/permissions:
    get:
      summary: Get category chatable permissions (Staff only)
      operationId: chat#api/category_chatables#permissions
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string # Assuming category ID can be non-numeric
      responses:
        '200':
          description: Success
          content:
            application/json: {}
      # StaffConstraint.new applies
  /chat/api/mentions/groups:
    get:
      summary: Check group mentions for hints
      operationId: chat#api/hints#check_group_mentions
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads:
    get:
      summary: List threads in a chat channel
      operationId: chat#api/channel_threads#index
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    post:
      summary: Create a thread in a chat channel
      operationId: chat#api/channel_threads#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}:
    put:
      summary: Update a chat thread
      operationId: chat#api/channel_threads#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
    get:
      summary: Get chat thread details
      operationId: chat#api/channel_threads#show
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}/messages:
    get:
      summary: List messages in a chat thread
      operationId: chat#api/channel_thread_messages#index
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}/read:
    put:
      summary: Mark a chat thread as read for current user
      operationId: chat#api/channels_threads_read#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}/drafts:
    post:
      summary: Create a draft for a chat thread
      operationId: chat#api/channels_threads_drafts#create
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}/notifications-settings/me:
    put:
      summary: Update current user's notification settings for a chat thread
      operationId: chat#api/channel_threads_current_user_notifications_settings#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/threads/{thread_id}/mark-thread-title-prompt-seen/me:
    post:
      summary: Mark thread title prompt as seen for current user
      operationId: chat#api/channel_threads_current_user_title_prompt_seen#update
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/direct-message-channels:
    post:
      summary: Create a direct message channel
      operationId: chat#api/direct_messages#create
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/api/channels/{channel_id}/messages/{message_id}/restore:
    put:
      summary: Restore a deleted chat message
      operationId: chat#api/channel_messages#restore
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/admin/export/messages:
    post:
      summary: Export chat messages (Admin)
      operationId: chat#admin/export#export_messages
      responses:
        '200':
          description: Success
          content:
            application/json: {}
      # StaffConstraint.new applies
  /chat/direct_messages:
    get:
      summary: List direct messages (UI Route)
      operationId: chat#direct_messages#index
      responses:
        '200':
          description: Success (HTML)
  /chat/hooks/{key}:
    post:
      summary: Incoming webhook to create a chat message
      operationId: chat#incoming_webhooks#create_message
      parameters:
        - name: key
          in: path
          required: true
          description: Webhook key
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/hooks/{key}/slack:
    post:
      summary: Incoming Slack-compatible webhook to create a chat message
      operationId: chat#incoming_webhooks#create_message_slack_compatible
      parameters:
        - name: key
          in: path
          required: true
          description: Webhook key
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat: # /chat/
    get:
      summary: Chat root (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/new-message:
    get:
      summary: New chat message (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/direct-messages: # Duplicates /chat/direct_messages, but this is how it's in routes.rb
    get:
      summary: Direct messages (UI Route, duplicate path for GET)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/channels:
    get:
      summary: Chat channels list (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/threads:
    get:
      summary: Chat threads list (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/browse:
    get:
      summary: Browse chat channels (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/browse/all:
    get:
      summary: Browse all chat channels (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/browse/closed:
    get:
      summary: Browse closed chat channels (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/browse/open:
    get:
      summary: Browse open chat channels (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/browse/archived:
    get:
      summary: Browse archived chat channels (UI Route)
      operationId: chat#chat#respond
      responses:
        '200':
          description: Success (HTML)
  /chat/dismiss-retention-reminder:
    post:
      summary: Dismiss chat retention reminder
      operationId: chat#chat#dismiss_retention_reminder
      responses:
        '200':
          description: Success
  /chat/{chat_channel_id}/react/{message_id}:
    put:
      summary: React to a chat message
      operationId: chat#chat#react
      parameters:
        - name: chat_channel_id
          in: path
          required: true
          description: Chat Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /chat/{chat_channel_id}/{message_id}/rebake:
    put:
      summary: Rebake a chat message
      operationId: chat#chat#rebake
      parameters:
        - name: chat_channel_id
          in: path
          required: true
          description: Chat Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /chat/{chat_channel_id}/quote:
    post:
      summary: Quote chat messages
      operationId: chat#chat#quote_messages
      parameters:
        - name: chat_channel_id
          in: path
          required: true
          description: Chat Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /chat/user_chat_enabled/{user_id}:
    put:
      summary: Set user chat status (enabled/disabled)
      operationId: chat#chat#set_user_chat_status
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: integer # Or string if username
      responses:
        '200':
          description: Success
  /chat/{chat_channel_id}:
    post:
      summary: Create a message in a chat channel (UI initiated)
      operationId: chat#api/channel_messages#create # Maps to API controller
      parameters:
        - name: chat_channel_id
          in: path
          required: true
          description: Chat Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json: {}
  /chat/c/{channel_title}/{channel_id}:
    get:
      summary: View chat channel (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string # Can be numeric or other
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/{message_id}:
    get:
      summary: View chat channel message (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer # Assuming message_id is integer
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/info:
    get:
      summary: View chat channel info (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/info/about:
    get:
      summary: View chat channel info/about (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/info/members:
    get:
      summary: View chat channel info/members (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/info/settings:
    get:
      summary: View chat channel info/settings (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /chat/channel/{channel_id}:
    get:
      summary: Redirect to canonical chat channel URL
      operationId: chat#redirect_channel
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string # Or integer
      responses:
        '302': # Or 301 based on typical Discourse redirect behavior
          description: Redirect to /chat/c/-/:channel_id
  /chat/c/{channel_title}/{channel_id}/t/{thread_id}:
    get:
      summary: View chat thread (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /chat/c/{channel_title}/{channel_id}/t/{thread_id}/{message_id}:
    get:
      summary: View chat thread message (UI Route)
      operationId: chat#chat#respond
      parameters:
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: thread_id
          in: path
          required: true
          description: Thread ID
          schema:
            type: integer
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /chat/channel/{channel_id}/{channel_title}:
    get:
      summary: Redirect to canonical chat channel URL (with title)
      operationId: chat#redirect_channel_with_title
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
      responses:
        '302': # Or 301
          description: Redirect to /chat/c/:channel_title/:channel_id
  /chat/channel/{channel_id}/{channel_title}/info:
    get:
      summary: Redirect to canonical chat channel info URL
      operationId: chat#redirect_channel_info
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /chat/channel/{channel_id}/{channel_title}/info/about:
    get:
      summary: Redirect to canonical chat channel info/about URL
      operationId: chat#redirect_channel_info_about
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /chat/channel/{channel_id}/{channel_title}/info/members:
    get:
      summary: Redirect to canonical chat channel info/members URL
      operationId: chat#redirect_channel_info_members
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /chat/channel/{channel_id}/{channel_title}/info/settings:
    get:
      summary: Redirect to canonical chat channel info/settings URL
      operationId: chat#redirect_channel_info_settings
      parameters:
        - name: channel_id
          in: path
          required: true
          description: Channel ID
          schema:
            type: string
        - name: channel_title
          in: path
          required: true
          description: Channel title (slug)
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /tags:
    get:
      summary: List Tags
      operationId: tags#index
      responses:
        '200':
          description: Success
  /tags/filter/list:
    get:
      summary: List Tags (Filter List)
      operationId: tags#index # Same as /tags
      responses:
        '200':
          description: Success
  /tags/filter/search:
    get:
      summary: Search Tags (Filter Search)
      operationId: tags#search
      responses:
        '200':
          description: Success
  /tags/list:
    get:
      summary: List All Tags
      operationId: tags#list
      responses:
        '200':
          description: Success
  /tags/personal_messages/{username}:
    get:
      summary: Get Personal Message Tags for User
      operationId: tags#personal_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /tags/upload:
    post:
      summary: Upload Tags (Admin)
      operationId: tags#upload
      responses:
        '200':
          description: Success
  /tags/unused:
    get:
      summary: List Unused Tags (Admin)
      operationId: tags#list_unused
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Unused Tags (Admin)
      operationId: tags#destroy_unused
      responses:
        '200':
          description: Success
  /tags/c/*category_slug_path_with_id/none/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (No Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (All Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/none/{tag_id}:
    get:
      summary: Show Tag in Category (No Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/all/{tag_id}:
    get:
      summary: Show Tag in Category (All Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}/l/{filter}:
    get:
      summary: List Topics by Tag and Filter in Category (Default Subcategories)
      operationId: tags#show_filter # Placeholder, depends on filter
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/c/*category_slug_path_with_id/{tag_id}:
    get:
      summary: Show Tag in Category (Default Subcategories)
      operationId: tags#show
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/intersection/{tag_id}/*additional_tag_ids:
    get:
      summary: Show Intersection of Tags
      operationId: tags#show
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Primary Tag ID or name
          schema:
            type: string
        - name: additional_tag_ids
          in: path
          required: true
          description: Additional Tag IDs or names (comma-separated or slash-separated)
          schema:
            type: string # Actual parsing might be more complex
      responses:
        '200':
          description: Success (JSON or RSS based on format)
  /tags/*tag_id: # Catch-all for tags, redirects
    get:
      summary: Redirect Tag
      operationId: redirect
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '302':
          description: Redirect
  /tag_groups:
    get:
      summary: List Tag Groups (Staff)
      operationId: tag_groups#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Tag Group (Staff)
      operationId: tag_groups#create
      responses:
        '200':
          description: Success
  /tag_groups/new:
    get:
      summary: New Tag Group Form (Staff)
      operationId: tag_groups#new
      responses:
        '200':
          description: Success
  /tag_groups/filter/search:
    get:
      summary: Search Tag Groups (Staff)
      operationId: tag_groups#search
      responses:
        '200':
          description: Success (JSON)
  /tag_groups/{id}:
    get:
      summary: Get Tag Group Details (Staff)
      operationId: tag_groups#show
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Update Tag Group (Staff)
      operationId: tag_groups#update
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Tag Group (Staff)
      operationId: tag_groups#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Tag Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /t/{topic_id}/view-stats.json:
    get:
      summary: Get Topic View Stats
      operationId: topic_view_stats#index
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  # Root routes with constraints (these are dynamic, based on SiteSetting.homepage)
  # / (latest, categories, top, new, unread, hot, posted, read, custom, blank, finish_installation)
  # It's hard to represent these directly as they depend on config.
  # A generic placeholder or specific examples might be needed.
  # For now, I'll omit these dynamic root routes.
  /custom:
    get:
      summary: Custom Home Page
      operationId: home_page#custom
      responses:
        '200':
          description: Success (HTML)
  /user-api-key/new:
    get:
      summary: New User API Key Form
      operationId: user_api_keys#new
      responses:
        '200':
          description: Success (HTML)
  /user-api-key:
    post:
      summary: Create User API Key
      operationId: user_api_keys#create
      responses:
        '200':
          description: Success
  /user-api-key/revoke:
    post:
      summary: Revoke User API Key
      operationId: user_api_keys#revoke
      responses:
        '200':
          description: Success
  /user-api-key/undo-revoke:
    post:
      summary: Undo Revoke User API Key
      operationId: user_api_keys#undo_revoke
      responses:
        '200':
          description: Success
  /user-api-key/otp:
    get:
      summary: Get User API Key OTP
      operationId: user_api_keys#otp
      responses:
        '200':
          description: Success
    post:
      summary: Create User API Key OTP
      operationId: user_api_keys#create_otp
      responses:
        '200':
          description: Success
  /user-api-key-client:
    get:
      summary: Show User API Key Client
      operationId: user_api_key_clients#show
      responses:
        '200':
          description: Success
    post:
      summary: Create User API Key Client
      operationId: user_api_key_clients#create
      responses:
        '200':
          description: Success
  /safe-mode:
    get:
      summary: Safe Mode Index
      operationId: safe_mode#index
      responses:
        '200':
          description: Success (HTML)
    post:
      summary: Enter Safe Mode
      operationId: safe_mode#enter
      responses:
        '200':
          description: Success
  /theme-qunit:
    get:
      summary: Theme QUnit Tests
      operationId: qunit#theme
      responses:
        '200':
          description: Success (HTML)
  /theme-tests: # Redirect
    get:
      summary: Redirect to Theme QUnit Tests
      operationId: redirect
      responses:
        '302':
          description: Redirect
  /testem-theme-qunit/{testem_id}/theme-qunit: # Development only
    get:
      summary: Theme QUnit Tests (Testem)
      operationId: qunit#theme
      parameters:
        - name: testem_id
          in: path
          required: true
          description: Testem ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /push_notifications/subscribe:
    post:
      summary: Subscribe to Push Notifications
      operationId: push_notification#subscribe
      responses:
        '200':
          description: Success
  /push_notifications/unsubscribe:
    post:
      summary: Unsubscribe from Push Notifications
      operationId: push_notification#unsubscribe
      responses:
        '200':
          description: Success
  /csp_reports:
    post:
      summary: Create CSP Report
      operationId: csp_reports#create
      responses:
        '200':
          description: Success
  /permalink-check:
    get:
      summary: Check Permalink
      operationId: permalinks#check
      responses:
        '200':
          description: Success
  /do-not-disturb:
    post:
      summary: Create Do Not Disturb Setting
      operationId: do_not_disturb#create
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Do Not Disturb Setting
      operationId: do_not_disturb#destroy
      responses:
        '200':
          description: Success
  /presence/update:
    post:
      summary: Update User Presence
      operationId: presence#update
      responses:
        '200':
          description: Success
  /presence/get:
    get:
      summary: Get User Presence
      operationId: presence#get
      responses:
        '200':
          description: Success
  /user-status:
    get:
      summary: Get User Status
      operationId: user_status#get
      responses:
        '200':
          description: Success
    put:
      summary: Set User Status
      operationId: user_status#set
      responses:
        '200':
          description: Success
    delete:
      summary: Clear User Status
      operationId: user_status#clear
      responses:
        '200':
          description: Success
  /sidebar_sections:
    get:
      summary: List Sidebar Sections
      operationId: sidebar_sections#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Sidebar Section
      operationId: sidebar_sections#create
      responses:
        '200':
          description: Success
    put:
      summary: Update Sidebar Section
      operationId: sidebar_sections#update
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Sidebar Section
      operationId: sidebar_sections#destroy
      responses:
        '200':
          description: Success
  /sidebar_sections/reset/{id}:
    put:
      summary: Reset Sidebar Section
      operationId: sidebar_sections#reset
      parameters:
        - name: id
          in: path
          required: true
          description: Sidebar Section ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /pageview:
    post:
      summary: Track Pageview
      operationId: pageview#index
      responses:
        '200':
          description: Success
  /form-templates/{id}:
    get:
      summary: Show Form Template (Public)
      operationId: form_templates#show
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /form-templates:
    get:
      summary: List Form Templates (Public)
      operationId: form_templates#index
      responses:
        '200':
          description: Success
  /emojis:
    get:
      summary: List Emojis
      operationId: emojis#index
      responses:
        '200':
          description: Success
  /emojis/search-aliases:
    get:
      summary: Search Emoji Aliases
      operationId: emojis#search_aliases
      responses:
        '200':
          description: Success (JSON)
  /test_net_http_timeouts: # Test only
    get:
      summary: Test Net::HTTP Timeouts
      operationId: test_requests#test_net_http_timeouts
      responses:
        '200':
          description: Success
  /test_net_http_headers: # Test only
    get:
      summary: Test Net::HTTP Headers
      operationId: test_requests#test_net_http_headers
      responses:
        '200':
          description: Success
  # Catch-all route for permalinks - this is very generic
  # /*url:
  #   get:
  #     summary: Handle Permalink
  #     operationId: permalinks#show
  #     parameters:
  #       - name: url
  #         in: path
  #         required: true
  #         description: Permalink URL
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: Success (Content or Redirect)
  # It's better to omit this catch-all as it's too broad for a useful OpenAPI spec.
  /invites/upload_csv:
    post:
      summary: Upload CSV of Invites
      operationId: invites#upload_csv
      responses:
        '200':
          description: Success
  /invites/destroy-all-expired:
    post:
      summary: Destroy All Expired Invites
      operationId: invites#destroy_all_expired
      responses:
        '200':
          description: Success
  /invites/reinvite:
    post:
      summary: Resend Invite
      operationId: invites#resend_invite
      responses:
        '200':
          description: Success
  /invites/reinvite-all:
    post:
      summary: Resend All Invites
      operationId: invites#resend_all_invites
      responses:
        '200':
          description: Success
  /invites/show/{id}: # Note the path structure
    put:
      summary: Perform Accept Invitation
      operationId: invites#perform_accept_invitation
      parameters:
        - name: id
          in: path
          required: true
          description: Invite ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /invites/retrieve:
    get:
      summary: Retrieve Invites
      operationId: invites#retrieve
      responses:
        '200':
          description: Success
  /export_csv/export_entity:
    post:
      summary: Export Entity as CSV
      operationId: export_csv#export_entity
      responses:
        '200':
          description: Success
  /export_csv/latest_user_archive/{user_id}.json:
    get:
      summary: Get Latest User Archive
      operationId: export_csv#latest_user_archive
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          schema:
            type: string # Assuming it can be non-numeric
      responses:
        '200':
          description: Success (JSON)
  /onebox:
    get:
      summary: Get Onebox Preview
      operationId: onebox#show
      responses:
        '200':
          description: Success
  /inline-onebox:
    get:
      summary: Get Inline Onebox Preview
      operationId: inline_onebox#show
      responses:
        '200':
          description: Success
  /exception: # Redirects to latest
    get:
      summary: Exception Test (Redirects)
      operationId: list#latest
      responses:
        '302': # Assuming it redirects
          description: Redirect
  /message-bus/poll:
    get:
      summary: Poll Message Bus
      operationId: message_bus#poll
      responses:
        '200':
          description: Success
  /drafts:
    get:
      summary: List Drafts
      operationId: drafts#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Draft
      operationId: drafts#create
      responses:
        '200':
          description: Success
  /drafts/{id}: # Assuming id is numeric from resources
    get:
      summary: Show Draft
      operationId: drafts#show
      parameters:
        - name: id
          in: path
          required: true
          description: Draft ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Draft
      operationId: drafts#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Draft ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /service-worker.js:
    get:
      summary: Get Service Worker
      operationId: static#service_worker_asset
      responses:
        '200':
          description: Success (JavaScript)
          content:
            application/javascript: {}
  /cdn_asset/{site}/*path:
    get:
      summary: Get CDN Asset
      operationId: static#cdn_asset
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
        - name: path
          in: path
          required: true
          description: Asset path
          schema:
            type: string
      responses:
        '200':
          description: Success (Asset content)
  /favicon/proxied:
    get:
      summary: Get Proxied Favicon
      operationId: static#favicon
      responses:
        '200':
          description: Success (Image)
  /robots.txt:
    get:
      summary: Get robots.txt
      operationId: robots_txt#index
      responses:
        '200':
          description: Success (plain text)
          content:
            text/plain: {}
  /robots-builder.json:
    get:
      summary: Get Robots.txt Builder Config
      operationId: robots_txt#builder
      responses:
        '200':
          description: Success (JSON)
  /offline.html:
    get:
      summary: Get Offline Page
      operationId: offline#index
      responses:
        '200':
          description: Success (HTML)
  /manifest.webmanifest:
    get:
      summary: Get Web App Manifest
      operationId: metadata#manifest
      responses:
        '200':
          description: Success (JSON)
          content:
            application/manifest+json: {}
  /manifest.json: # Alias for webmanifest
    get:
      summary: Get Web App Manifest (Alias)
      operationId: metadata#manifest
      responses:
        '200':
          description: Success (JSON)
          content:
            application/json: {}
  /.well-known/assetlinks.json:
    get:
      summary: Get Android App Association
      operationId: metadata#app_association_android
      responses:
        '200':
          description: Success (JSON)
  /apple-app-site-association:
    get:
      summary: Get Apple App Site Association
      operationId: metadata#app_association_ios
      responses:
        '200':
          description: Success (JSON or plain text)
  /.well-known/apple-app-site-association:
    get:
      summary: Get Apple App Site Association (Well-Known)
      operationId: metadata#app_association_ios
      responses:
        '200':
          description: Success (JSON or plain text)
  /opensearch:
    get:
      summary: Get OpenSearch Description
      operationId: metadata#opensearch
      responses:
        '200':
          description: Success (XML)
          content:
            application/opensearchdescription+xml: {}
  /tag/{tag_id}:
    get:
      summary: Get Tag Details
      operationId: tags#show
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON or RSS)
    put:
      summary: Update Tag
      operationId: tags#update
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
    delete:
      summary: Delete Tag
      operationId: tags#destroy
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /tag/{tag_id}/info:
    get:
      summary: Get Tag Info
      operationId: tags#info
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /tag/{tag_id}/notifications:
    get:
      summary: Get Tag Notifications
      operationId: tags#notifications
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
    put:
      summary: Update Tag Notifications
      operationId: tags#update_notifications
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /tag/{tag_id}/synonyms:
    post:
      summary: Create Tag Synonyms
      operationId: tags#create_synonyms
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /tag/{tag_id}/synonyms/{synonym_id}:
    delete:
      summary: Delete Tag Synonym
      operationId: tags#destroy_synonym
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: synonym_id
          in: path
          required: true
          description: Synonym Tag ID or name
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /tag/{tag_id}/l/{filter}: # Generic filter for tags
    get:
      summary: List Topics by Tag and Filter
      operationId: tags#show_filter # Placeholder, will vary
      parameters:
        - name: tag_id
          in: path
          required: true
          description: Tag ID or name
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /topics/created-by/{username}:
    get:
      summary: List Topics Created by User
      operationId: list#topics_by
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages/{username}:
    get:
      summary: List Private Messages for User
      operationId: list#private_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-sent/{username}:
    get:
      summary: List Sent Private Messages for User
      operationId: list#private_messages_sent
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-archive/{username}:
    get:
      summary: List Archived Private Messages for User
      operationId: list#private_messages_archive
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-unread/{username}:
    get:
      summary: List Unread Private Messages for User
      operationId: list#private_messages_unread
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-tags/{username}/{tag_id}.json:
    get:
      summary: List Private Messages by Tag for User
      operationId: list#private_messages_tag
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: tag_id
          in: path
          required: true
          description: Tag ID
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-new/{username}:
    get:
      summary: List New Private Messages for User
      operationId: list#private_messages_new
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-warnings/{username}:
    get:
      summary: List Warning Private Messages for User
      operationId: list#private_messages_warnings
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/groups/{group_name}:
    get:
      summary: List Topics in Group
      operationId: list#group_topics
      parameters:
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-group/{username}/{group_name}.json:
    get:
      summary: List Private Messages for User in Group
      operationId: list#private_messages_group
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-group/{username}/{group_name}/archive.json:
    get:
      summary: List Archived Private Messages for User in Group
      operationId: list#private_messages_group_archive
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-group/{username}/{group_name}/new.json:
    get:
      summary: List New Private Messages for User in Group
      operationId: list#private_messages_group_new
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /topics/private-messages-group/{username}/{group_name}/unread.json:
    get:
      summary: List Unread Private Messages for User in Group
      operationId: list#private_messages_group_unread
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (JSON)
  /embed/topics:
    get:
      summary: Embed Topics
      operationId: embed#topics
      responses:
        '200':
          description: Success
  /embed/comments:
    get:
      summary: Embed Comments
      operationId: embed#comments
      responses:
        '200':
          description: Success
  /embed/count:
    get:
      summary: Embed Count
      operationId: embed#count
      responses:
        '200':
          description: Success
  /embed/info:
    get:
      summary: Embed Info
      operationId: embed#info
      responses:
        '200':
          description: Success
  /new-topic:
    get:
      summary: New Topic Page
      operationId: new_topic#index
      responses:
        '200':
          description: Success (HTML)
  /new-message:
    get:
      summary: New Message Page
      operationId: new_topic#index # Same controller as new-topic
      responses:
        '200':
          description: Success (HTML)
  /new-invite:
    get:
      summary: New Invite Page
      operationId: new_invite#index
      responses:
        '200':
          description: Success (HTML)
  /t/id_for/{slug}:
    get:
      summary: Get Topic ID for Slug
      operationId: topics#id_for_slug
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /t/external_id/{external_id}:
    get:
      summary: Get Topic by External ID
      operationId: topics#show_by_external_id
      parameters:
        - name: external_id
          in: path
          required: true
          description: External ID
          schema:
            type: string
            pattern: "[\\w-]+"
      responses:
        '200':
          description: Success (JSON)
  /t/{slug}/{topic_id}/print:
    get:
      summary: Print Topic View
      operationId: topics#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (HTML)
  /t/{slug}/{topic_id}/wordpress:
    get:
      summary: Get Topic for WordPress
      operationId: topics#wordpress
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/wordpress: # Without slug
    get:
      summary: Get Topic for WordPress (No Slug)
      operationId: topics#wordpress
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{slug}/{topic_id}/summary:
    get:
      summary: Get Topic Summary
      operationId: topics#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/summary: # Without slug
    get:
      summary: Get Topic Summary (No Slug)
      operationId: topics#show
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{slug}/{topic_id}/status:
    put:
      summary: Update Topic Status
      operationId: topics#status
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/status: # Without slug
    put:
      summary: Update Topic Status (No Slug)
      operationId: topics#status
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/clear-pin:
    put:
      summary: Clear Topic Pin
      operationId: topics#clear_pin
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/re-pin:
    put:
      summary: Re-pin Topic
      operationId: topics#re_pin
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/mute:
    put:
      summary: Mute Topic
      operationId: topics#mute
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/unmute:
    put:
      summary: Unmute Topic
      operationId: topics#unmute
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/timer:
    post:
      summary: Set Topic Timer
      operationId: topics#timer
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/make-banner:
    put:
      summary: Make Topic a Banner
      operationId: topics#make_banner
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/remove-banner:
    put:
      summary: Remove Topic Banner
      operationId: topics#remove_banner
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/remove-allowed-user:
    put:
      summary: Remove Allowed User from Topic
      operationId: topics#remove_allowed_user
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/remove-allowed-group:
    put:
      summary: Remove Allowed Group from Topic
      operationId: topics#remove_allowed_group
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/recover:
    put:
      summary: Recover Topic
      operationId: topics#recover
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/{post_number}:
    get:
      summary: Show Topic with Specific Post Number
      operationId: topics#show
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: post_number
          in: path
          required: true
          description: Post number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/last:
    get:
      summary: Show Last Post in Topic
      operationId: topics#show
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{slug}/{topic_id}.rss:
    get:
      summary: Topic Feed (RSS)
      operationId: topics#feed
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (RSS)
          content:
            application/rss+xml: {}
  /t/{slug}/{topic_id}:
    get:
      summary: Show Topic (with Slug)
      operationId: topics#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{slug}/{topic_id}/{post_number}:
    get:
      summary: Show Topic with Slug and Specific Post Number
      operationId: topics#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: post_number
          in: path
          required: true
          description: Post number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{slug}/{topic_id}/last:
    get:
      summary: Show Last Post in Topic (with Slug)
      operationId: topics#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Topic slug
          schema:
            type: string
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/posts:
    get:
      summary: Get Posts in Topic
      operationId: topics#posts
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  /t/{topic_id}/post_ids:
    get:
      summary: Get Post IDs in Topic
      operationId: topics#post_ids
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  /t/{topic_id}/excerpts:
    get:
      summary: Get Topic Excerpts
      operationId: topics#excerpts
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  /t/{topic_id}/timings:
    post:
      summary: Update Topic Timings (Specific Topic)
      operationId: topics#timings
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Topic Timings
      operationId: topics#destroy_timings
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/invite:
    post:
      summary: Invite User to Topic
      operationId: topics#invite
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/invite-group:
    post:
      summary: Invite Group to Topic
      operationId: topics#invite_group
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/move-posts:
    post:
      summary: Move Posts in Topic
      operationId: topics#move_posts
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/merge-topic:
    post:
      summary: Merge Topic
      operationId: topics#merge_topic
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/change-owner:
    post:
      summary: Change Post Owners in Topic
      operationId: topics#change_post_owners
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/change-timestamp:
    put:
      summary: Change Timestamps in Topic
      operationId: topics#change_timestamps
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/bookmark:
    put:
      summary: Bookmark Topic
      operationId: topics#bookmark
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/remove_bookmarks:
    put:
      summary: Remove Bookmarks from Topic
      operationId: topics#remove_bookmarks
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/tags:
    put:
      summary: Update Topic Tags
      operationId: topics#update_tags
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/slow_mode:
    put:
      summary: Set Slow Mode for Topic
      operationId: topics#set_slow_mode
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{topic_id}/notifications:
    post:
      summary: Set Topic Notifications
      operationId: topics#set_notifications
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /post_localizations/create_or_update:
    post:
      summary: Create or Update Post Localization
      operationId: post_localizations#create_or_update
      responses:
        '200':
          description: Success
  /post_localizations/destroy:
    delete:
      summary: Destroy Post Localization
      operationId: post_localizations#destroy
      responses:
        '200':
          description: Success
  /topic_localizations/create_or_update:
    post:
      summary: Create or Update Topic Localization
      operationId: topic_localizations#create_or_update
      responses:
        '200':
          description: Success
  /topic_localizations/destroy:
    delete:
      summary: Destroy Topic Localization
      operationId: topic_localizations#destroy
      responses:
        '200':
          description: Success
  /notifications:
    get:
      summary: List Notifications
      operationId: notifications#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Notification (Likely an internal or specific use case)
      operationId: notifications#create
      responses:
        '200':
          description: Success
    put:
      summary: Update Notification (Likely an internal or specific use case)
      operationId: notifications#update
      responses:
        '200':
          description: Success
    delete:
      summary: Destroy Notification (Likely an internal or specific use case)
      operationId: notifications#destroy
      responses:
        '200':
          description: Success
  /notifications/mark-read:
    put:
      summary: Mark Notifications as Read
      operationId: notifications#mark_read
      responses:
        '200':
          description: Success
  /notifications/read: # Alias for mark-read
    put:
      summary: Mark Notification as Read (Single)
      operationId: notifications#mark_read
      responses:
        '200':
          description: Success
  /notifications/totals:
    get:
      summary: Get Notification Totals
      operationId: notifications#totals
      responses:
        '200':
          description: Success
  /auth/failure:
    get:
      summary: Authentication Failure
      operationId: users/omniauth_callbacks#failure
      responses:
        '200':
          description: Success or Redirect
    post:
      summary: Authentication Failure (POST)
      operationId: users/omniauth_callbacks#failure
      responses:
        '200':
          description: Success or Redirect
  /auth/{provider}:
    get:
      summary: Confirm Authentication Request
      operationId: users/omniauth_callbacks#confirm_request
      parameters:
        - name: provider
          in: path
          required: true
          description: Authentication provider name
          schema:
            type: string
      responses:
        '200':
          description: Success or Redirect
  /auth/{provider}/callback:
    get:
      summary: Authentication Callback
      operationId: users/omniauth_callbacks#complete
      parameters:
        - name: provider
          in: path
          required: true
          description: Authentication provider name
          schema:
            type: string
      responses:
        '200':
          description: Success or Redirect
    post:
      summary: Authentication Callback (POST)
      operationId: users/omniauth_callbacks#complete
      parameters:
        - name: provider
          in: path
          required: true
          description: Authentication provider name
          schema:
            type: string
      responses:
        '200':
          description: Success or Redirect
  /associate/{token}:
    get:
      summary: Get Account Association Info
      operationId: users/associate_accounts#connect_info
      parameters:
        - name: token
          in: path
          required: true
          description: Association token
          schema:
            type: string
            pattern: "\\h{32}"
      responses:
        '200':
          description: Success
    post:
      summary: Connect Associated Account
      operationId: users/associate_accounts#connect
      parameters:
        - name: token
          in: path
          required: true
          description: Association token
          schema:
            type: string
            pattern: "\\h{32}"
      responses:
        '200':
          description: Success
  /clicks/track:
    post:
      summary: Track Click
      operationId: clicks#track
      responses:
        '200':
          description: Success
  /post_action_users:
    get:
      summary: List Users who Performed Post Actions
      operationId: post_action_users#index
      responses:
        '200':
          description: Success
  /post_readers:
    get:
      summary: List Users who Read Posts
      operationId: post_readers#index
      responses:
        '200':
          description: Success
  /post_actions:
    post:
      summary: Create Post Action
      operationId: post_actions#create
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Post Action
      operationId: post_actions#destroy
      responses:
        '200':
          description: Success
  /user_actions:
    get:
      summary: List User Actions
      operationId: user_actions#index
      responses:
        '200':
          description: Success
  /user_actions/{id}:
    get:
      summary: Get User Action
      operationId: user_actions#show
      parameters:
        - name: id
          in: path
          required: true
          description: User Action ID
          schema:
            type: integer # Assuming numeric ID
      responses:
        '200':
          description: Success
  /badges:
    get:
      summary: List Badges
      operationId: badges#index
      responses:
        '200':
          description: Success (JSON or HTML)
  /badges/{id}:
    get:
      summary: Get Badge Details
      operationId: badges#show
      parameters:
        - name: id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success (JSON, HTML, or RSS)
  /badges/{id}/{slug}:
    get:
      summary: Get Badge Details with Slug
      operationId: badges#show
      parameters:
        - name: id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string
        - name: slug
          in: path
          required: true
          description: Badge slug
          schema:
            type: string
      responses:
        '200':
          description: Success (JSON, HTML, or RSS)
  /user_badges:
    get:
      summary: List User Badges
      operationId: user_badges#index
      responses:
        '200':
          description: Success
    post:
      summary: Create User Badge
      operationId: user_badges#create
      responses:
        '200':
          description: Success
    delete:
      summary: Delete User Badge
      operationId: user_badges#destroy
      responses:
        '200':
          description: Success
  /user_badges/toggle_favorite:
    put:
      summary: Toggle User Badge Favorite Status
      operationId: user_badges#toggle_favorite
      responses:
        '200':
          description: Success (JSON)
  /c:
    get:
      summary: Redirect to Categories
      operationId: redirect # Special case
      responses:
        '302':
          description: Redirect to /categories
  /categories:
    get:
      summary: List Categories
      operationId: categories#index
      responses:
        '200':
          description: Success
    post:
      summary: Create Category
      operationId: categories#create
      responses:
        '200':
          description: Success
    put:
      summary: Update Category
      operationId: categories#update
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Category
      operationId: categories#destroy
      responses:
        '200':
          description: Success
  /categories/reorder:
    post:
      summary: Reorder Categories
      operationId: categories#reorder
      responses:
        '200':
          description: Success
  /categories/find:
    get:
      summary: Find Category
      operationId: categories#find
      responses:
        '200':
          description: Success
  /categories/search:
    post:
      summary: Search Categories
      operationId: categories#search
      responses:
        '200':
          description: Success
  /categories/hierarchical_search:
    get:
      summary: Hierarchical Category Search
      operationId: categories#hierarchical_search
      responses:
        '200':
          description: Success
  /categories/{parent_category_id}:
    get:
      summary: List Subcategories
      operationId: categories#index
      parameters:
        - name: parent_category_id
          in: path
          required: true
          description: Parent Category ID
          schema:
            type: string # Can be slug or ID
      responses:
        '200':
          description: Success
  /category/{category_id}/move:
    post:
      summary: Move Category
      operationId: categories#move
      parameters:
        - name: category_id
          in: path
          required: true
          description: Category ID or Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /category/{category_id}/notifications:
    post:
      summary: Set Category Notifications
      operationId: categories#set_notifications
      parameters:
        - name: category_id
          in: path
          required: true
          description: Category ID or Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /category/{category_id}/slug:
    put:
      summary: Update Category Slug
      operationId: categories#update_slug
      parameters:
        - name: category_id
          in: path
          required: true
          description: Category ID or Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /category/*path:
    get:
      summary: Redirect Category Path
      operationId: categories#redirect
      parameters:
        - name: path
          in: path
          required: true
          description: Category path to redirect
          schema:
            type: string
      responses:
        '301': # Or 302 depending on implementation
          description: Redirect
  /categories_and_latest:
    get:
      summary: Get Categories and Latest Topics
      operationId: categories#categories_and_latest
      responses:
        '200':
          description: Success
  /categories_and_top:
    get:
      summary: Get Categories and Top Topics
      operationId: categories#categories_and_top
      responses:
        '200':
          description: Success
  /categories_and_hot:
    get:
      summary: Get Categories and Hot Topics
      operationId: categories#categories_and_hot
      responses:
        '200':
          description: Success
  /c/{id}/show:
    get:
      summary: Show Category Details
      operationId: categories#show
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID or Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/{id}/visible_groups:
    get:
      summary: Get Visible Groups for Category
      operationId: categories#visible_groups
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID or Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug/find_by_slug:
    get:
      summary: Find Category by Slug
      operationId: categories#find_by_slug
      parameters:
        - name: category_slug
          in: path
          required: true
          description: Category slug (can be nested)
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug/edit/{tab}:
    get:
      summary: Edit Category by Slug (with tab)
      operationId: categories#find_by_slug
      parameters:
        - name: category_slug
          in: path
          required: true
          description: Category slug (can be nested)
          schema:
            type: string
        - name: tab
          in: path
          required: false # Optional tab
          description: Edit tab
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /c/*category_slug/edit: # Without tab
    get:
      summary: Edit Category by Slug
      operationId: categories#find_by_slug
      parameters:
        - name: category_slug
          in: path
          required: true
          description: Category slug (can be nested)
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /new-category:
    get:
      summary: New Category Page
      operationId: categories#show # Or new, depending on how it's handled
      responses:
        '200':
          description: Success (HTML)
  /c/*category_slug_path_with_id.rss:
    get:
      summary: Category Feed (RSS)
      operationId: list#category_feed
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
      responses:
        '200':
          description: Success (RSS)
          content:
            application/rss+xml: {}
  /c/*category_slug_path_with_id/none:
    get:
      summary: Category Latest Topics (No Subcategories)
      operationId: list#category_none_latest
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug_path_with_id/none/l/top/{period}:
    get:
      summary: Redirect Category Top Topics (No Subcategories, Period)
      operationId: redirect
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: period
          in: path
          required: true
          description: Top period (e.g., daily, weekly)
          schema:
            type: string
      responses:
        '301':
          description: Redirect
  /c/*category_slug_path_with_id/l/top/{period}:
    get:
      summary: Redirect Category Top Topics (Period)
      operationId: redirect
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: period
          in: path
          required: true
          description: Top period
          schema:
            type: string
      responses:
        '301':
          description: Redirect
  # ... (Repeat for other filters like latest, unread, new, hot, unread, posted, read)
  /c/*category_slug_path_with_id/none/l/{filter}:
    get:
      summary: Category Topics by Filter (No Subcategories)
      operationId: list#category_none_filter # Placeholder, will vary
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug_path_with_id/l/{filter}:
    get:
      summary: Category Topics by Filter
      operationId: list#category_filter # Placeholder, will vary
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
        - name: filter
          in: path
          required: true
          description: Topic filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug_path_with_id/all:
    get:
      summary: Category Default View (All Topics)
      operationId: list#category_default
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
      responses:
        '200':
          description: Success (HTML)
  /c/*category_slug_path_with_id/subcategories:
    get:
      summary: List Subcategories for Category
      operationId: categories#index
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /c/*category_slug_path_with_id:
    get:
      summary: Category Default View
      operationId: list#category_default
      parameters:
        - name: category_slug_path_with_id
          in: path
          required: true
          description: Category slug path with ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /hashtags:
    get:
      summary: Lookup Hashtags
      operationId: hashtags#lookup
      responses:
        '200':
          description: Success
  /hashtags/by-ids:
    get:
      summary: Get Hashtags by IDs
      operationId: hashtags#by_ids
      responses:
        '200':
          description: Success
  /hashtags/search:
    get:
      summary: Search Hashtags
      operationId: hashtags#search
      responses:
        '200':
          description: Success
  /top/{period}.rss:
    get:
      summary: Redirect Top Topics Feed (RSS, with period)
      operationId: redirect
      parameters:
        - name: period
          in: path
          required: true
          description: Top period
          schema:
            type: string
      responses:
        '301':
          description: Redirect
  /top/{period}.json:
    get:
      summary: Redirect Top Topics (JSON, with period)
      operationId: redirect
      parameters:
        - name: period
          in: path
          required: true
          description: Top period
          schema:
            type: string
      responses:
        '301':
          description: Redirect
  /top/{period}:
    get:
      summary: Redirect Top Topics (with period)
      operationId: redirect
      parameters:
        - name: period
          in: path
          required: true
          description: Top period
          schema:
            type: string
      responses:
        '301':
          description: Redirect
  /latest.rss:
    get:
      summary: Latest Topics Feed (RSS)
      operationId: list#latest_feed
      responses:
        '200':
          description: Success (RSS)
          content:
            application/rss+xml: {}
  /top.rss:
    get:
      summary: Top Topics Feed (RSS)
      operationId: list#top_feed
      responses:
        '200':
          description: Success (RSS)
          content:
            application/rss+xml: {}
  /hot.rss:
    get:
      summary: Hot Topics Feed (RSS)
      operationId: list#hot_feed
      responses:
        '200':
          description: Success (RSS)
          content:
            application/rss+xml: {}
  # Generic filter routes (latest, top, new, unread, hot, posted, read)
  /{filter}:
    get:
      summary: List Topics by Filter
      operationId: list#filter # Placeholder, will vary
      parameters:
        - name: filter
          in: path
          required: true
          description: Topic filter (e.g., latest, top)
          schema:
            type: string
      responses:
        '200':
          description: Success
  /filter:
    get:
      summary: Filtered Topics List
      operationId: list#filter
      responses:
        '200':
          description: Success
  /search/query:
    get:
      summary: Search Query
      operationId: search#query
      responses:
        '200':
          description: Success
  /search:
    get:
      summary: Search Page
      operationId: search#show
      responses:
        '200':
          description: Success
  /search/click:
    post:
      summary: Track Search Click
      operationId: search#click
      responses:
        '200':
          description: Success
  /t/{id}:
    get:
      summary: Show Topic
      operationId: topics#show
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer # Or string if slug is allowed
      responses:
        '200':
          description: Success
  /t/{topic_id}: # PUT and DELETE use topic_id
    put:
      summary: Update Topic
      operationId: topics#update
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Topic
      operationId: topics#destroy
      parameters:
        - name: topic_id # Assuming id maps to topic_id for DELETE
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/archive-message:
    put:
      summary: Archive Topic Message
      operationId: topics#archive_message
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/move-to-inbox:
    put:
      summary: Move Topic to Inbox
      operationId: topics#move_to_inbox
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/convert-topic/{type}:
    put:
      summary: Convert Topic Type
      operationId: topics#convert_topic
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: type
          in: path
          required: true
          description: New topic type
          schema:
            type: string
      responses:
        '200':
          description: Success
  /t/{id}/publish:
    put:
      summary: Publish Topic
      operationId: topics#publish
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/shared-draft:
    put:
      summary: Update Topic Shared Draft
      operationId: topics#update_shared_draft
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/reset-bump-date/{post_id}:
    put:
      summary: Reset Topic Bump Date (with Post ID)
      operationId: topics#reset_bump_date
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: post_id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /t/{id}/reset-bump-date: # Without post_id
    put:
      summary: Reset Topic Bump Date
      operationId: topics#reset_bump_date
      parameters:
        - name: id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /topics/bulk:
    put:
      summary: Bulk Update Topics
      operationId: topics#bulk
      responses:
        '200':
          description: Success
  /topics/reset-new:
    put:
      summary: Reset New Topics Count
      operationId: topics#reset_new
      responses:
        '200':
          description: Success
  /topics/pm-reset-new:
    put:
      summary: Reset New Private Messages Count
      operationId: topics#private_message_reset_new
      responses:
        '200':
          description: Success
  /topics/timings:
    post:
      summary: Update Topic Timings
      operationId: topics#timings
      responses:
        '200':
          description: Success
  /topics/similar_to:
    get:
      summary: Find Similar Topics
      operationId: similar_topics#index
      responses:
        '200':
          description: Success
  /similar_topics: # From resources :similar_topics
    get:
      summary: Find Similar Topics (Resource)
      operationId: similar_topics#index
      responses:
        '200':
          description: Success
  /topics/feature_stats:
    get:
      summary: Get Topic Feature Stats
      operationId: topics#feature_stats
      responses:
        '200':
          description: Success
  /user-badges/{username}.json:
    get:
      summary: Get User Badges (JSON)
      operationId: user_badges#username
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /user-badges/{username}:
    get:
      summary: Get User Badges
      operationId: user_badges#username
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /user_avatar/{username}/refresh_gravatar:
    post:
      summary: Refresh User Gravatar
      operationId: user_avatars#refresh_gravatar
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /letter_avatar/{username}/{size}/{version}.png:
    get:
      summary: Show Letter Avatar
      operationId: user_avatars#show_letter
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: size
          in: path
          required: true
          description: Avatar size
          schema:
            type: integer
        - name: version
          in: path
          required: true
          description: Avatar version
          schema:
            type: string # Or integer if it's always numeric
      responses:
        '200':
          description: Success (PNG image)
          content:
            image/png: {}
  /user_avatar/{hostname}/{username}/{size}/{version}.png:
    get:
      summary: Show User Avatar
      operationId: user_avatars#show
      parameters:
        - name: hostname
          in: path
          required: true
          description: Hostname
          schema:
            type: string
            pattern: "[\\w\\.-]+"
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: size
          in: path
          required: true
          description: Avatar size
          schema:
            type: integer
        - name: version
          in: path
          required: true
          description: Avatar version
          schema:
            type: string # Or integer
      responses:
        '200':
          description: Success (PNG image)
          content:
            image/png: {}
  /letter_avatar_proxy/{version}/letter/{letter}/{color}/{size}.png:
    get:
      summary: Show Proxy Letter Avatar
      operationId: user_avatars#show_proxy_letter
      parameters:
        - name: version
          in: path
          required: true
          description: Avatar version
          schema:
            type: string # Or integer
        - name: letter
          in: path
          required: true
          description: Letter for avatar
          schema:
            type: string
        - name: color
          in: path
          required: true
          description: Color hex code
          schema:
            type: string
        - name: size
          in: path
          required: true
          description: Avatar size
          schema:
            type: integer
      responses:
        '200':
          description: Success (PNG image)
          content:
            image/png: {}
  /svg-sprite/{hostname}/svg-{theme_id}-{version}.js:
    get:
      summary: Get SVG Sprite Sheet
      operationId: svg_sprite#show
      parameters:
        - name: hostname
          in: path
          required: true
          description: Hostname
          schema:
            type: string
            pattern: "[\\w\\.-]+"
        - name: theme_id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string # Pattern: "([0-9]+)?" allows optional digits
            pattern: "([0-9]+)?"
        - name: version
          in: path
          required: true
          description: Sprite version (SHA)
          schema:
            type: string
            pattern: "\\h{40}"
      responses:
        '200':
          description: Success (JavaScript file)
          content:
            application/javascript: {}
  /svg-sprite/search/{keyword}:
    get:
      summary: Search SVG Sprites
      operationId: svg_sprite#search
      parameters:
        - name: keyword
          in: path
          required: true
          description: Search keyword
          schema:
            type: string
            pattern: "[-a-z0-9\\s\\%]+"
      responses:
        '200':
          description: Success
  /svg-sprite/picker-search:
    get:
      summary: Search SVG Sprites for Picker
      operationId: svg_sprite#icon_picker_search
      responses:
        '200':
          description: Success (JSON)
  /svg-sprite/{hostname}/icon/{name}.svg:
    get:
      summary: Get SVG Icon (default color)
      operationId: svg_sprite#svg_icon
      parameters:
        - name: hostname
          in: path
          required: true
          description: Hostname
          schema:
            type: string
            pattern: "[\\w\\.-]+"
        - name: name
          in: path
          required: true
          description: Icon name
          schema:
            type: string
            pattern: "[-a-z0-9\\s\\%]+"
      responses:
        '200':
          description: Success (SVG image)
          content:
            image/svg+xml: {}
  /svg-sprite/{hostname}/icon/{color}/{name}.svg:
    get:
      summary: Get SVG Icon (with color)
      operationId: svg_sprite#svg_icon
      parameters:
        - name: hostname
          in: path
          required: true
          description: Hostname
          schema:
            type: string
            pattern: "[\\w\\.-]+"
        - name: color
          in: path
          required: true
          description: Color hex code (3 or 6 digits)
          schema:
            type: string
            pattern: "(\\h{3}{1,2})"
        - name: name
          in: path
          required: true
          description: Icon name
          schema:
            type: string
            pattern: "[-a-z0-9\\s\\%]+"
      responses:
        '200':
          description: Success (SVG image)
          content:
            image/svg+xml: {}
  /highlight-js/{hostname}/{version}.js:
    get:
      summary: Get Highlight.js
      operationId: highlight_js#show
      parameters:
        - name: hostname
          in: path
          required: true
          description: Hostname
          schema:
            type: string
            pattern: "[\\w\\.-]+"
        - name: version
          in: path
          required: true
          description: Highlight.js version
          schema:
            type: string
      responses:
        '200':
          description: Success (JavaScript file)
          content:
            application/javascript: {}
  /stylesheets/{name}.css.map:
    get:
      summary: Get Stylesheet Source Map
      operationId: stylesheets#show_source_map
      parameters:
        - name: name
          in: path
          required: true
          description: Stylesheet name
          schema:
            type: string
            pattern: "[-a-z0-9_]+"
      responses:
        '200':
          description: Success (CSS Map file)
          content:
            application/json: {} # Or specific map format
  /stylesheets/{name}.css:
    get:
      summary: Get Stylesheet
      operationId: stylesheets#show
      parameters:
        - name: name
          in: path
          required: true
          description: Stylesheet name
          schema:
            type: string
            pattern: "[-a-z0-9_]+"
      responses:
        '200':
          description: Success (CSS file)
          content:
            text/css: {}
  /color-scheme-stylesheet/{id}:
    get:
      summary: Get Color Scheme Stylesheet
      operationId: stylesheets#color_scheme
      parameters:
        - name: id
          in: path
          required: true
          description: Color Scheme ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success (JSON)
  /color-scheme-stylesheet/{id}/{theme_id}:
    get:
      summary: Get Color Scheme Stylesheet for Theme
      operationId: stylesheets#color_scheme
      parameters:
        - name: id
          in: path
          required: true
          description: Color Scheme ID
          schema:
            type: string
        - name: theme_id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string # Assuming theme_id can be non-numeric
      responses:
        '200':
          description: Success (JSON)
  /theme-javascripts/{digest}.js:
    get:
      summary: Get Theme JavaScripts
      operationId: theme_javascripts#show
      parameters:
        - name: digest
          in: path
          required: true
          description: Digest (SHA)
          schema:
            type: string
            pattern: "\\h{40}"
      responses:
        '200':
          description: Success (JavaScript file)
          content:
            application/javascript: {}
  /theme-javascripts/{digest}.map:
    get:
      summary: Get Theme JavaScripts Source Map
      operationId: theme_javascripts#show_map
      parameters:
        - name: digest
          in: path
          required: true
          description: Digest (SHA)
          schema:
            type: string
            pattern: "\\h{40}"
      responses:
        '200':
          description: Success (Source Map file)
          content:
            application/json: {} # Or specific map format
  /theme-javascripts/tests/{theme_id}-{digest}.js:
    get:
      summary: Get Theme JavaScripts for Tests
      operationId: theme_javascripts#show_tests
      parameters:
        - name: theme_id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string # Assuming theme_id can be non-numeric
        - name: digest
          in: path
          required: true
          description: Digest (SHA)
          schema:
            type: string
            # pattern: "\\h{40}" # Digest pattern from other route
      responses:
        '200':
          description: Success (JavaScript file)
          content:
            application/javascript: {}
  /uploads/lookup-metadata:
    post:
      summary: Lookup Upload Metadata
      operationId: uploads#metadata
      responses:
        '200':
          description: Success
  /uploads:
    post:
      summary: Create Upload
      operationId: uploads#create
      responses:
        '200':
          description: Success
  /uploads/lookup-urls:
    post:
      summary: Lookup Upload URLs
      operationId: uploads#lookup_urls
      responses:
        '200':
          description: Success
  /uploads/generate-presigned-put:
    post:
      summary: Generate Presigned PUT URL for Upload
      operationId: uploads#generate_presigned_put
      responses:
        '200':
          description: Success (JSON)
  /uploads/complete-external-upload:
    post:
      summary: Complete External Upload
      operationId: uploads#complete_external_upload
      responses:
        '200':
          description: Success (JSON)
  /uploads/create-multipart:
    post:
      summary: Create Multipart Upload
      operationId: uploads#create_multipart
      responses:
        '200':
          description: Success (JSON)
  /uploads/complete-multipart:
    post:
      summary: Complete Multipart Upload
      operationId: uploads#complete_multipart
      responses:
        '200':
          description: Success (JSON)
  /uploads/abort-multipart:
    post:
      summary: Abort Multipart Upload
      operationId: uploads#abort_multipart
      responses:
        '200':
          description: Success (JSON)
  /uploads/batch-presign-multipart-parts:
    post:
      summary: Batch Presign Multipart Upload Parts
      operationId: uploads#batch_presign_multipart_parts
      responses:
        '200':
          description: Success (JSON)
  /uploads/{site}/{sha}.{extension}:
    get:
      summary: Show Uploaded File
      operationId: uploads#show
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
            pattern: "\\w+"
        - name: sha
          in: path
          required: true
          description: File SHA
          schema:
            type: string
            pattern: "\\h{40}"
        - name: extension
          in: path
          required: true
          description: File extension
          schema:
            type: string
            pattern: "[a-z0-9\\._]+"
      responses:
        '200':
          description: Success (file content)
  /posts:
    get:
      summary: Latest Posts
      operationId: posts#latest
      responses:
        '200':
          description: Success (JSON or RSS)
    post:
      summary: Create Post
      operationId: posts#create
      responses:
        '200':
          description: Success (JSON)
  /private-posts:
    get:
      summary: Latest Private Posts
      operationId: posts#latest
      responses:
        '200':
          description: Success (JSON or RSS)
  /posts/by_number/{topic_id}/{post_number}:
    get:
      summary: Get Post by Number in Topic
      operationId: posts#by_number
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: post_number
          in: path
          required: true
          description: Post number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/by-date/{topic_id}/{date}:
    get:
      summary: Get Post by Date in Topic
      operationId: posts#by_date
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
        - name: date
          in: path
          required: true
          description: Date (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
  /posts/{id}/reply-history:
    get:
      summary: Get Post Reply History
      operationId: posts#reply_history
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/reply-ids:
    get:
      summary: Get Post Reply IDs
      operationId: posts#reply_ids
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{username}/deleted:
    get:
      summary: Get Deleted Posts by User
      operationId: posts#deleted_posts
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /posts/{username}/pending:
    get:
      summary: Get Pending Posts by User
      operationId: posts#pending
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /posts/{id}:
    get:
      summary: Get Post Details
      operationId: posts#show
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
    put:
      summary: Update Post
      operationId: posts#update
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
    delete:
      summary: Delete Post
      operationId: posts#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success (JSON)
  /posts/{id}/bookmark:
    delete:
      summary: Delete Post Bookmark
      operationId: posts#destroy_bookmark
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/wiki:
    put:
      summary: Toggle Post Wiki Status
      operationId: posts#wiki
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/post_type:
    put:
      summary: Update Post Type
      operationId: posts#post_type
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/rebake:
    put:
      summary: Rebake Post
      operationId: posts#rebake
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/unhide:
    put:
      summary: Unhide Post
      operationId: posts#unhide
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/locked:
    put:
      summary: Toggle Post Lock Status
      operationId: posts#locked
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/notice:
    put:
      summary: Set Post Notice
      operationId: posts#notice
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/replies:
    get:
      summary: Get Post Replies
      operationId: posts#replies
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/latest:
    get:
      summary: Get Latest Revision of Post
      operationId: posts#latest_revision
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/{revision}:
    get:
      summary: Get Post Revision
      operationId: posts#revisions
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
        - name: revision
          in: path
          required: true
          description: Revision number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/{revision}/hide:
    put:
      summary: Hide Post Revision
      operationId: posts#hide_revision
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
        - name: revision
          in: path
          required: true
          description: Revision number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/{revision}/show:
    put:
      summary: Show Post Revision
      operationId: posts#show_revision
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
        - name: revision
          in: path
          required: true
          description: Revision number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/{revision}/revert:
    put:
      summary: Revert Post to Revision
      operationId: posts#revert
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
        - name: revision
          in: path
          required: true
          description: Revision number
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/revisions/permanently_delete:
    delete:
      summary: Permanently Delete Post Revisions
      operationId: posts#permanently_delete_revisions
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/{id}/recover:
    put:
      summary: Recover Post
      operationId: posts#recover
      parameters:
        - name: id
          in: path
          required: true
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /posts/destroy_many:
    delete:
      summary: Destroy Many Posts
      operationId: posts#destroy_many
      responses:
        '200':
          description: Success
  /posts/merge_posts:
    put:
      summary: Merge Posts
      operationId: posts#merge_posts
      responses:
        '200':
          description: Success
  /groups:
    get:
      summary: List Groups
      operationId: groups#index
      responses:
        '200':
          description: Success
    post: # This is from the admin namespace, but included here due to resource definition
      summary: Admin Create Group
      operationId: groups#create
      responses:
        '200':
          description: Success
  /groups/new:
    get:
      summary: New Group Form
      operationId: groups#new
      responses:
        '200':
          description: Success
  /groups/check-name:
    get:
      summary: Check Group Name Availability
      operationId: groups#check_name
      responses:
        '200':
          description: Success
  /groups/custom/new:
    get:
      summary: New Custom Group Form (Staff)
      operationId: groups#new
      responses:
        '200':
          description: Success
  /groups/search:
    get:
      summary: Search Groups
      operationId: groups#search
      responses:
        '200':
          description: Success
  /groups/{id}: # Assuming id is username format for groups as well
    get:
      summary: Get Group Details
      operationId: groups#show # Mapped from /g/:name
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Update Group
      operationId: groups#update
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/edit:
    get:
      summary: Edit Group Form
      operationId: groups#edit
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/test_email_settings:
    post:
      summary: Test Group Email Settings
      operationId: groups#test_email_settings
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/owners:
    put:
      summary: Add Owners to Group
      operationId: groups#add_owners
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/join:
    put:
      summary: Join Group
      operationId: groups#join
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/members:
    delete:
      summary: Remove Member from Group
      operationId: groups#remove_member
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Add Members to Group
      operationId: groups#add_members
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/leave:
    delete:
      summary: Leave Group
      operationId: groups#leave
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/{id}/handle_membership_request:
    put:
      summary: Handle Group Membership Request
      operationId: groups#handle_membership_request
      parameters:
        - name: id
          in: path
          required: true
          description: Group name or ID
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /groups/by-id/{id}:
    get:
      summary: Get Group by ID
      operationId: groups#show
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string # Assuming numeric ID but route doesn't specify
      responses:
        '200':
          description: Success
  /g/{name}:
    get:
      summary: Get Group Details (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/activity:
    get:
      summary: Get Group Activity (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/activity/{filter}:
    get:
      summary: Get Group Activity with Filter (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Activity filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /g/{name}/requests:
    get:
      summary: Get Group Membership Requests (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/messages:
    get:
      summary: Get Group Messages (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/messages/inbox:
    get:
      summary: Get Group Messages Inbox (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/messages/archive:
    get:
      summary: Get Group Messages Archive (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage:
    get:
      summary: Manage Group (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/profile:
    get:
      summary: Manage Group Profile (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/members:
    get:
      summary: Manage Group Members (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/membership:
    get:
      summary: Manage Group Membership (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/interaction:
    get:
      summary: Manage Group Interaction (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/email:
    get:
      summary: Manage Group Email (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/categories:
    get:
      summary: Manage Group Categories (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/tags:
    get:
      summary: Manage Group Tags (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/manage/logs:
    get:
      summary: Manage Group Logs (Alias /g)
      operationId: groups#show
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/permissions:
    get:
      summary: Get Group Permissions (Alias /g)
      operationId: groups#permissions
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/request_membership:
    post:
      summary: Request Group Membership (Alias /g)
      operationId: groups#request_membership
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/notifications:
    post:
      summary: Set Group Notifications (Alias /g)
      operationId: groups#set_notifications
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/posts.rss:
    get:
      summary: Group Posts Feed (RSS, Alias /g)
      operationId: groups#posts_feed
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (RSS)
  /g/{name}/mentions.rss:
    get:
      summary: Group Mentions Feed (RSS, Alias /g)
      operationId: groups#mentions_feed
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success (RSS)
  /g/{name}/members:
    get:
      summary: Get Group Members (Alias /g)
      operationId: groups#members
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/posts:
    get:
      summary: Get Group Posts (Alias /g)
      operationId: groups#posts
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/mentions:
    get:
      summary: Get Group Mentions (Alias /g)
      operationId: groups#mentions
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/mentionable:
    get:
      summary: Get Group Mentionable Status (Alias /g)
      operationId: groups#mentionable
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/messageable:
    get:
      summary: Get Group Messageable Status (Alias /g)
      operationId: groups#messageable
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /g/{name}/logs:
    get:
      summary: Get Group Logs (Alias /g)
      operationId: groups#histories
      parameters:
        - name: name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /associated_groups:
    get:
      summary: List Associated Groups (Admin)
      operationId: associated_groups#index
      responses:
        '200':
          description: Success
  /slugs:
    post:
      summary: Generate Slug
      operationId: slugs#generate
      responses:
        '200':
          description: Success
  /bookmarks/bulk:
    put:
      summary: Bulk Update Bookmarks
      operationId: bookmarks#bulk
      responses:
        '200':
          description: Success
  /bookmarks:
    post:
      summary: Create Bookmark
      operationId: bookmarks#create
      responses:
        '200':
          description: Success
  /bookmarks/{id}: # Assuming id is numeric for bookmarks
    put:
      summary: Update Bookmark
      operationId: bookmarks#update
      parameters:
        - name: id
          in: path
          required: true
          description: Bookmark ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Bookmark
      operationId: bookmarks#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Bookmark ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /bookmarks/{id}/toggle_pin:
    put:
      summary: Toggle Bookmark Pin
      operationId: bookmarks#toggle_pin
      parameters:
        - name: id
          in: path
          required: true
          description: Bookmark ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /uploads/{site}/{sha}: # Route without extension
    get:
      summary: Show Uploaded File (no extension)
      operationId: uploads#show
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
            pattern: "\\w+"
        - name: sha
          in: path
          required: true
          description: File SHA
          schema:
            type: string
            pattern: "\\h{40}"
      responses:
        '200':
          description: Success (file content)
  /uploads/short-url/{base62}.{extension}:
    get:
      summary: Show Uploaded File by Short URL
      operationId: uploads#show_short
      parameters:
        - name: base62
          in: path
          required: true
          description: Base62 encoded short URL
          schema:
            type: string
            pattern: "[a-zA-Z0-9]+"
        - name: extension
          in: path
          required: true
          description: File extension
          schema:
            type: string
            pattern: "[a-zA-Z0-9\\._-]+"
      responses:
        '200':
          description: Success (file content)
  /uploads/short-url/{base62}: # Route without extension
    get:
      summary: Show Uploaded File by Short URL (no extension)
      operationId: uploads#show_short
      parameters:
        - name: base62
          in: path
          required: true
          description: Base62 encoded short URL
          schema:
            type: string
            pattern: "[a-zA-Z0-9]+"
      responses:
        '200':
          description: Success (file content)
  /uploads/{site}/original/{tree}{sha}.{extension}:
    get:
      summary: Show Original Uploaded File (Attachment)
      operationId: uploads#show
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
            pattern: "\\w+"
        - name: tree
          in: path
          required: true
          description: Path tree
          schema:
            type: string
            pattern: "([a-z0-9]+/)+"
        - name: sha
          in: path
          required: true
          description: File SHA
          schema:
            type: string
            pattern: "\\h{40}"
        - name: extension
          in: path
          required: true
          description: File extension
          schema:
            type: string
            pattern: "[a-z0-9\\._]+"
      responses:
        '200':
          description: Success (file content)
  /uploads/{site}/original/{tree}{sha}: # Route without extension
    get:
      summary: Show Original Uploaded File (Attachment, no extension)
      operationId: uploads#show
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
            pattern: "\\w+"
        - name: tree
          in: path
          required: true
          description: Path tree
          schema:
            type: string
            pattern: "([a-z0-9]+/)+"
        - name: sha
          in: path
          required: true
          description: File SHA
          schema:
            type: string
            pattern: "\\h{40}"
      responses:
        '200':
          description: Success (file content)
  /uploads/{site}/{id}/{sha}:
    get:
      summary: Show Uploaded File (Old Route)
      operationId: uploads#show
      parameters:
        - name: site
          in: path
          required: true
          description: Site identifier
          schema:
            type: string
            pattern: "\\w+"
        - name: id
          in: path
          required: true
          description: Upload ID
          schema:
            type: string # Assuming numeric, but route has /d+
            pattern: "\\d+"
        - name: sha
          in: path
          required: true
          description: File SHA (16 chars)
          schema:
            type: string
            pattern: "\\h{16}"
      responses:
        '200':
          description: Success (file content)
  /secure-media-uploads/{path}.{extension}:
    get:
      summary: Show Secure Media Upload (Deprecated)
      operationId: uploads#_show_secure_deprecated
      parameters:
        - name: path
          in: path
          required: true
          description: File path
          schema:
            type: string
        - name: extension
          in: path
          required: true
          description: File extension
          schema:
            type: string
            pattern: "[a-z0-9\\._]+"
      responses:
        '200':
          description: Success (file content)
  /secure-media-uploads/{path}: # Route without extension
    get:
      summary: Show Secure Media Upload (Deprecated, no extension)
      operationId: uploads#_show_secure_deprecated
      parameters:
        - name: path
          in: path
          required: true
          description: File path
          schema:
            type: string
      responses:
        '200':
          description: Success (file content)
  /secure-uploads/{path}.{extension}:
    get:
      summary: Show Secure Upload
      operationId: uploads#show_secure
      parameters:
        - name: path
          in: path
          required: true
          description: File path
          schema:
            type: string
        - name: extension
          in: path
          required: true
          description: File extension
          schema:
            type: string
            pattern: "[a-z0-9\\._]+"
      responses:
        '200':
          description: Success (file content)
  /secure-uploads/{path}: # Route without extension
    get:
      summary: Show Secure Upload (no extension)
      operationId: uploads#show_secure
      parameters:
        - name: path
          in: path
          required: true
          description: File path
          schema:
            type: string
      responses:
        '200':
          description: Success (file content)
  /my/*path:
    get:
      summary: My Redirect
      operationId: users#my_redirect
      parameters:
        - name: path
          in: path
          required: true
          description: Path to redirect to
          schema:
            type: string
      responses:
        '200':
          description: Success
  /.well-known/change-password:
    get:
      summary: Well-Known Change Password
      operationId: redirect # Special case, redirects
      responses:
        '302':
          description: Redirect to security preferences
  /user-cards:
    get:
      summary: Get User Cards
      operationId: users#cards
      responses:
        '200':
          description: Success
  /directory-columns:
    get:
      summary: Get Directory Columns
      operationId: directory_columns#index
      responses:
        '200':
          description: Success
  /edit-directory-columns:
    get:
      summary: Edit Directory Columns (GET)
      operationId: edit_directory_columns#index
      responses:
        '200':
          description: Success
    put:
      summary: Edit Directory Columns (PUT)
      operationId: edit_directory_columns#update
      responses:
        '200':
          description: Success
  /users:
    get:
      summary: List Users (HTML)
      operationId: users#index
      responses:
        '200':
          description: Success
    post:
      summary: Create User
      operationId: users#create
      responses:
        '200':
          description: Success
  /users/check_username:
    get:
      summary: Check Username Availability
      operationId: users#check_username
      responses:
        '200':
          description: Success
  /users/check_email:
    get:
      summary: Check Email Availability
      operationId: users#check_email
      responses:
        '200':
          description: Success
  /users/trusted-session:
    get:
      summary: Users Trusted Session
      operationId: users#trusted_session
      responses:
        '200':
          description: Success
  /users/confirm-session:
    post:
      summary: Users Confirm Session
      operationId: users#confirm_session
      responses:
        '200':
          description: Success
  /users/second_factors:
    post:
      summary: List User Second Factors
      operationId: users#list_second_factors
      responses:
        '200':
          description: Success
  /users/second_factor:
    put:
      summary: Update User Second Factor
      operationId: users#update_second_factor
      responses:
        '200':
          description: Success
  /users/create_second_factor_security_key:
    post:
      summary: Create Second Factor Security Key
      operationId: users#create_second_factor_security_key
      responses:
        '200':
          description: Success
  /users/register_second_factor_security_key:
    post:
      summary: Register Second Factor Security Key
      operationId: users#register_second_factor_security_key
      responses:
        '200':
          description: Success
  /users/security_key:
    put:
      summary: Update Security Key
      operationId: users#update_security_key
      responses:
        '200':
          description: Success
  /users/create_second_factor_totp:
    post:
      summary: Create Second Factor TOTP
      operationId: users#create_second_factor_totp
      responses:
        '200':
          description: Success
  /users/enable_second_factor_totp:
    post:
      summary: Enable Second Factor TOTP
      operationId: users#enable_second_factor_totp
      responses:
        '200':
          description: Success
  /users/disable_second_factor:
    put:
      summary: Disable Second Factor
      operationId: users#disable_second_factor
      responses:
        '200':
          description: Success
  /users/second_factors_backup:
    put:
      summary: Create Second Factor Backup
      operationId: users#create_second_factor_backup
      responses:
        '200':
          description: Success
  /users/create_passkey:
    post:
      summary: Create Passkey
      operationId: users#create_passkey
      responses:
        '200':
          description: Success
  /users/register_passkey:
    post:
      summary: Register Passkey
      operationId: users#register_passkey
      responses:
        '200':
          description: Success
  /users/rename_passkey/{id}:
    put:
      summary: Rename Passkey
      operationId: users#rename_passkey
      parameters:
        - name: id
          in: path
          required: true
          description: Passkey ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/delete_passkey/{id}:
    delete:
      summary: Delete Passkey
      operationId: users#delete_passkey
      parameters:
        - name: id
          in: path
          required: true
          description: Passkey ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/update-activation-email:
    put:
      summary: Update Activation Email
      operationId: users#update_activation_email
      responses:
        '200':
          description: Success
  /users/email-login:
    post:
      summary: User Email Login
      operationId: users#email_login
      responses:
        '200':
          description: Success
  /users/admin-login:
    get:
      summary: User Admin Login (GET)
      operationId: users#admin_login
      responses:
        '200':
          description: Success
    put:
      summary: User Admin Login (PUT)
      operationId: users#admin_login
      responses:
        '200':
          description: Success
  /users/toggle-anon:
    post:
      summary: Toggle Anonymous Mode
      operationId: users#toggle_anon
      responses:
        '200':
          description: Success
  /users/read-faq:
    post:
      summary: Mark FAQ as Read
      operationId: users#read_faq
      responses:
        '200':
          description: Success
  /users/recent-searches:
    get:
      summary: Get User Recent Searches
      operationId: users#recent_searches
      responses:
        '200':
          description: Success
  /users/recent-searches: # Delete
    delete:
      summary: Reset User Recent Searches
      operationId: users#reset_recent_searches
      responses:
        '200':
          description: Success
  /users/search/users:
    get:
      summary: Search Users
      operationId: users#search_users
      responses:
        '200':
          description: Success
  /users/account-created:
    get:
      summary: User Account Created
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /users/account-created/resent:
    get:
      summary: User Account Created (Resent)
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /users/account-created/edit-email:
    get:
      summary: User Account Created (Edit Email)
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /users/password-reset/{token}:
    get:
      summary: Show Password Reset Form
      operationId: users#password_reset_show
      parameters:
        - name: token
          in: path
          required: true
          description: Password reset token
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Perform Password Reset
      operationId: users#password_reset_update
      parameters:
        - name: token
          in: path
          required: true
          description: Password reset token
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/confirm-email-token/{token}:
    get:
      summary: Confirm Email Token
      operationId: users#confirm_email_token
      parameters:
        - name: token
          in: path
          required: true
          description: Email confirmation token
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/activate-account/{token}:
    get:
      summary: Activate Account Form
      operationId: users#activate_account
      parameters:
        - name: token
          in: path
          required: true
          description: Account activation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
    put:
      summary: Perform Account Activation
      operationId: users#perform_account_activation
      parameters:
        - name: token
          in: path
          required: true
          description: Account activation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
  /users/confirm-old-email/{token}:
    get:
      summary: Show Confirm Old Email Form
      operationId: users_email#show_confirm_old_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for old email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Confirm Old Email
      operationId: users_email#confirm_old_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for old email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/confirm-new-email/{token}:
    get:
      summary: Show Confirm New Email Form
      operationId: users_email#show_confirm_new_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for new email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Confirm New Email
      operationId: users_email#confirm_new_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for new email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/confirm-admin/{token}:
    get:
      summary: Confirm Admin Action Form
      operationId: users#confirm_admin
      parameters:
        - name: token
          in: path
          required: true
          description: Admin confirmation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
    post:
      summary: Perform Admin Confirmation
      operationId: users#confirm_admin
      parameters:
        - name: token
          in: path
          required: true
          description: Admin confirmation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
  /users/{username}/private-messages:
    get:
      summary: User Private Messages
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/private-messages/{filter}:
    get:
      summary: User Private Messages with Filter
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/{username}/messages:
    get:
      summary: User Messages
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/messages/{filter}:
    get:
      summary: User Messages with Filter
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/{username}/messages/group/{group_name}:
    get:
      summary: User Messages for Group
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/messages/group/{group_name}/{filter}:
    get:
      summary: User Messages for Group with Filter
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/{username}/messages/tags/{tag_id}:
    get:
      summary: User Private Messages by Tag
      operationId: list#private_messages_tag
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: tag_id
          in: path
          required: true
          description: Tag ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/{username}.json:
    get:
      summary: Get User Details (JSON)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}:
    get:
      summary: Get User Details
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Update User Details
      operationId: users#update
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    delete:
      summary: Delete User
      operationId: users#destroy
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/emails:
    get:
      summary: Check User Emails
      operationId: users#check_emails
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/sso-email:
    get:
      summary: Check User SSO Email
      operationId: users#check_sso_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/sso-payload:
    get:
      summary: Check User SSO Payload
      operationId: users#check_sso_payload
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences:
    get:
      summary: Get User Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/email:
    get:
      summary: Get User Email Preferences
      operationId: users_email#index
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    post:
      summary: Create User Email Preference
      operationId: users_email#create
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Update User Email Preference
      operationId: users_email#update
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    delete:
      summary: Delete User Email Preference
      operationId: users#destroy_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/account:
    get:
      summary: Get User Account Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/security:
    get:
      summary: Get User Security Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/profile:
    get:
      summary: Get User Profile Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/emails: # Note: different from /email
    get:
      summary: Get User Emails Preferences (plural)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/primary-email:
    put:
      summary: Update User Primary Email
      operationId: users#update_primary_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/notifications:
    get:
      summary: Get User Notifications Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/tracking:
    get:
      summary: Get User Tracking Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/users:
    get:
      summary: Get User Users Preferences (Blocked/Muted)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/tags:
    get:
      summary: Get User Tags Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/interface:
    get:
      summary: Get User Interface Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/navigation-menu:
    get:
      summary: Get User Navigation Menu Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/apps:
    get:
      summary: Get User Apps Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/badge_title:
    get:
      summary: Get User Badge Title Preference
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Set User Badge Title
      operationId: users#badge_title
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/username:
    get:
      summary: Get User Username Preference
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Change Username
      operationId: users#username
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/second-factor:
    get:
      summary: Get User Second Factor Preferences
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/user_image:
    delete:
      summary: Delete User Image
      operationId: users#destroy_user_image
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/avatar/pick:
    put:
      summary: Pick User Avatar
      operationId: users#pick_avatar
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/avatar/select:
    put:
      summary: Select User Avatar
      operationId: users#select_avatar
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/revoke-account:
    post:
      summary: Revoke User Account
      operationId: users#revoke_account
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/preferences/revoke-auth-token:
    post:
      summary: Revoke User Auth Token
      operationId: users#revoke_auth_token
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/staff-info:
    get:
      summary: Get User Staff Info
      operationId: users#staff_info
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/summary:
    get:
      summary: Get User Summary
      operationId: users#summary # Also users#show, points to same controller action
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/notification_level:
    put:
      summary: Set User Notification Level
      operationId: users#notification_level
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/invited:
    get:
      summary: Get User Invited List
      operationId: users#invited
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/invited/{filter}:
    get:
      summary: Get User Invited List with Filter
      operationId: users#invited
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Invite filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/action/send_activation_email:
    post:
      summary: Send Activation Email
      operationId: users#send_activation_email
      responses:
        '200':
          description: Success
  /users/{username}/activity/topics.rss:
    get:
      summary: User Topics Feed (RSS)
      operationId: list#user_topics_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/activity.rss:
    get:
      summary: User Activity Feed (RSS)
      operationId: posts#user_posts_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/activity.json:
    get:
      summary: User Activity Feed (JSON)
      operationId: posts#user_posts_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/activity:
    get:
      summary: User Activity
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/activity/{filter}:
    get:
      summary: User Activity with Filter
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Activity filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/{username}/badges: # This is distinct from /admin/users/{username}/badges
    get:
      summary: Get User Badges
      operationId: users#badges
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/bookmarks:
    get:
      summary: Get User Bookmarks
      operationId: users#bookmarks
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/user-menu-bookmarks:
    get:
      summary: Get User Menu Bookmarks
      operationId: users#user_menu_bookmarks
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/user-menu-private-messages:
    get:
      summary: Get User Menu Private Messages
      operationId: users#user_menu_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/notifications:
    get:
      summary: User Notifications
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/notifications/{filter}:
    get:
      summary: User Notifications with Filter
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Notification filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /users/by-external/{external_id}:
    get:
      summary: Get User by External ID
      operationId: users#show
      parameters:
        - name: external_id
          in: path
          required: true
          description: External ID
          schema:
            type: string
            pattern: "[^/]+"
      responses:
        '200':
          description: Success
  /users/by-external/{external_provider}/{external_id}:
    get:
      summary: Get User by External Provider and ID
      operationId: users#show
      parameters:
        - name: external_provider
          in: path
          required: true
          description: External provider name
          schema:
            type: string
        - name: external_id
          in: path
          required: true
          description: External ID
          schema:
            type: string
            pattern: "[^/]+"
      responses:
        '200':
          description: Success
  /users/{username}/deleted-posts:
    get:
      summary: User Deleted Posts
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/topic-tracking-state:
    get:
      summary: Get User Topic Tracking State
      operationId: users#topic_tracking_state
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/private-message-topic-tracking-state:
    get:
      summary: Get User Private Message Topic Tracking State
      operationId: users#private_message_topic_tracking_state
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/profile-hidden:
    get:
      summary: User Profile Hidden
      operationId: users#profile_hidden
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/feature-topic:
    put:
      summary: Feature Topic on User Profile
      operationId: users#feature_topic
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/clear-featured-topic:
    put:
      summary: Clear Featured Topic on User Profile
      operationId: users#clear_featured_topic
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/card.json:
    get:
      summary: Get User Card (JSON)
      operationId: users#show_card
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /users/{username}/remove-password:
    put:
      summary: Remove User Password
      operationId: users#remove_password
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  # Routes for 'u' prefix, mirroring 'users'
  /u:
    get:
      summary: List Users (HTML, /u alias)
      operationId: users#index
      responses:
        '200':
          description: Success
    post:
      summary: Create User (/u alias)
      operationId: users#create
      responses:
        '200':
          description: Success
  /u/check_username:
    get:
      summary: Check Username Availability (/u alias)
      operationId: users#check_username
      responses:
        '200':
          description: Success
  /u/check_email:
    get:
      summary: Check Email Availability (/u alias)
      operationId: users#check_email
      responses:
        '200':
          description: Success
  /u/trusted-session:
    get:
      summary: Users Trusted Session (/u alias)
      operationId: users#trusted_session
      responses:
        '200':
          description: Success
  /u/confirm-session:
    post:
      summary: Users Confirm Session (/u alias)
      operationId: users#confirm_session
      responses:
        '200':
          description: Success
  /u/second_factors:
    post:
      summary: List User Second Factors (/u alias)
      operationId: users#list_second_factors
      responses:
        '200':
          description: Success
  /u/second_factor:
    put:
      summary: Update User Second Factor (/u alias)
      operationId: users#update_second_factor
      responses:
        '200':
          description: Success
  /u/create_second_factor_security_key:
    post:
      summary: Create Second Factor Security Key (/u alias)
      operationId: users#create_second_factor_security_key
      responses:
        '200':
          description: Success
  /u/register_second_factor_security_key:
    post:
      summary: Register Second Factor Security Key (/u alias)
      operationId: users#register_second_factor_security_key
      responses:
        '200':
          description: Success
  /u/security_key:
    put:
      summary: Update Security Key (/u alias)
      operationId: users#update_security_key
      responses:
        '200':
          description: Success
  /u/create_second_factor_totp:
    post:
      summary: Create Second Factor TOTP (/u alias)
      operationId: users#create_second_factor_totp
      responses:
        '200':
          description: Success
  /u/enable_second_factor_totp:
    post:
      summary: Enable Second Factor TOTP (/u alias)
      operationId: users#enable_second_factor_totp
      responses:
        '200':
          description: Success
  /u/disable_second_factor:
    put:
      summary: Disable Second Factor (/u alias)
      operationId: users#disable_second_factor
      responses:
        '200':
          description: Success
  /u/second_factors_backup:
    put:
      summary: Create Second Factor Backup (/u alias)
      operationId: users#create_second_factor_backup
      responses:
        '200':
          description: Success
  /u/create_passkey:
    post:
      summary: Create Passkey (/u alias)
      operationId: users#create_passkey
      responses:
        '200':
          description: Success
  /u/register_passkey:
    post:
      summary: Register Passkey (/u alias)
      operationId: users#register_passkey
      responses:
        '200':
          description: Success
  /u/rename_passkey/{id}:
    put:
      summary: Rename Passkey (/u alias)
      operationId: users#rename_passkey
      parameters:
        - name: id
          in: path
          required: true
          description: Passkey ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/delete_passkey/{id}:
    delete:
      summary: Delete Passkey (/u alias)
      operationId: users#delete_passkey
      parameters:
        - name: id
          in: path
          required: true
          description: Passkey ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/update-activation-email:
    put:
      summary: Update Activation Email (/u alias)
      operationId: users#update_activation_email
      responses:
        '200':
          description: Success
  /u/email-login:
    post:
      summary: User Email Login (/u alias)
      operationId: users#email_login
      responses:
        '200':
          description: Success
  /u/admin-login:
    get:
      summary: User Admin Login (GET, /u alias)
      operationId: users#admin_login
      responses:
        '200':
          description: Success
    put:
      summary: User Admin Login (PUT, /u alias)
      operationId: users#admin_login
      responses:
        '200':
          description: Success
  /u/toggle-anon:
    post:
      summary: Toggle Anonymous Mode (/u alias)
      operationId: users#toggle_anon
      responses:
        '200':
          description: Success
  /u/read-faq:
    post:
      summary: Mark FAQ as Read (/u alias)
      operationId: users#read_faq
      responses:
        '200':
          description: Success
  /u/recent-searches:
    get:
      summary: Get User Recent Searches (/u alias)
      operationId: users#recent_searches
      responses:
        '200':
          description: Success
    delete:
      summary: Reset User Recent Searches (/u alias)
      operationId: users#reset_recent_searches
      responses:
        '200':
          description: Success
  /u/search/users:
    get:
      summary: Search Users (/u alias)
      operationId: users#search_users
      responses:
        '200':
          description: Success
  /u/account-created:
    get:
      summary: User Account Created (/u alias)
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /u/account-created/resent:
    get:
      summary: User Account Created (Resent, /u alias)
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /u/account-created/edit-email:
    get:
      summary: User Account Created (Edit Email, /u alias)
      operationId: users#account_created
      responses:
        '200':
          description: Success
  /u/password-reset/{token}:
    get:
      summary: Show Password Reset Form (/u alias)
      operationId: users#password_reset_show
      parameters:
        - name: token
          in: path
          required: true
          description: Password reset token
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Perform Password Reset (/u alias)
      operationId: users#password_reset_update
      parameters:
        - name: token
          in: path
          required: true
          description: Password reset token
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/confirm-email-token/{token}:
    get:
      summary: Confirm Email Token (/u alias)
      operationId: users#confirm_email_token
      parameters:
        - name: token
          in: path
          required: true
          description: Email confirmation token
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/activate-account/{token}:
    get:
      summary: Activate Account Form (/u alias)
      operationId: users#activate_account
      parameters:
        - name: token
          in: path
          required: true
          description: Account activation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
    put:
      summary: Perform Account Activation (/u alias)
      operationId: users#perform_account_activation
      parameters:
        - name: token
          in: path
          required: true
          description: Account activation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
  /u/confirm-old-email/{token}:
    get:
      summary: Show Confirm Old Email Form (/u alias)
      operationId: users_email#show_confirm_old_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for old email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Confirm Old Email (/u alias)
      operationId: users_email#confirm_old_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for old email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/confirm-new-email/{token}:
    get:
      summary: Show Confirm New Email Form (/u alias)
      operationId: users_email#show_confirm_new_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for new email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Confirm New Email (/u alias)
      operationId: users_email#confirm_new_email
      parameters:
        - name: token
          in: path
          required: true
          description: Token for new email confirmation
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/confirm-admin/{token}:
    get:
      summary: Confirm Admin Action Form (/u alias)
      operationId: users#confirm_admin
      parameters:
        - name: token
          in: path
          required: true
          description: Admin confirmation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
    post:
      summary: Perform Admin Confirmation (/u alias)
      operationId: users#confirm_admin
      parameters:
        - name: token
          in: path
          required: true
          description: Admin confirmation token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
  /u/{username}/private-messages:
    get:
      summary: User Private Messages (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/private-messages/{filter}:
    get:
      summary: User Private Messages with Filter (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/{username}/messages:
    get:
      summary: User Messages (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/messages/{filter}:
    get:
      summary: User Messages with Filter (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/{username}/messages/group/{group_name}:
    get:
      summary: User Messages for Group (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/messages/group/{group_name}/{filter}:
    get:
      summary: User Messages for Group with Filter (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: group_name
          in: path
          required: true
          description: Group name
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Message filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/{username}/messages/tags/{tag_id}:
    get:
      summary: User Private Messages by Tag (/u alias)
      operationId: list#private_messages_tag
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: tag_id
          in: path
          required: true
          description: Tag ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/{username}.json:
    get:
      summary: Get User Details (JSON, /u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}:
    get:
      summary: Get User Details (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Update User Details (/u alias)
      operationId: users#update
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    delete:
      summary: Delete User (/u alias)
      operationId: users#destroy
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/emails:
    get:
      summary: Check User Emails (/u alias)
      operationId: users#check_emails
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/sso-email:
    get:
      summary: Check User SSO Email (/u alias)
      operationId: users#check_sso_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/sso-payload:
    get:
      summary: Check User SSO Payload (/u alias)
      operationId: users#check_sso_payload
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences:
    get:
      summary: Get User Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/email:
    get:
      summary: Get User Email Preferences (/u alias)
      operationId: users_email#index
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    post:
      summary: Create User Email Preference (/u alias)
      operationId: users_email#create
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Update User Email Preference (/u alias)
      operationId: users_email#update
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    delete:
      summary: Delete User Email Preference (/u alias)
      operationId: users#destroy_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/account:
    get:
      summary: Get User Account Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/security:
    get:
      summary: Get User Security Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/profile:
    get:
      summary: Get User Profile Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/emails:
    get:
      summary: Get User Emails Preferences (plural, /u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/primary-email:
    put:
      summary: Update User Primary Email (/u alias)
      operationId: users#update_primary_email
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/notifications:
    get:
      summary: Get User Notifications Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/tracking:
    get:
      summary: Get User Tracking Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/users:
    get:
      summary: Get User Users Preferences (Blocked/Muted, /u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/tags:
    get:
      summary: Get User Tags Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/interface:
    get:
      summary: Get User Interface Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/navigation-menu:
    get:
      summary: Get User Navigation Menu Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/apps:
    get:
      summary: Get User Apps Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/badge_title:
    get:
      summary: Get User Badge Title Preference (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Set User Badge Title (/u alias)
      operationId: users#badge_title
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/username:
    get:
      summary: Get User Username Preference (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
    put:
      summary: Change Username (/u alias)
      operationId: users#username
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/second-factor:
    get:
      summary: Get User Second Factor Preferences (/u alias)
      operationId: users#preferences
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/user_image:
    delete:
      summary: Delete User Image (/u alias)
      operationId: users#destroy_user_image
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/avatar/pick:
    put:
      summary: Pick User Avatar (/u alias)
      operationId: users#pick_avatar
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/avatar/select:
    put:
      summary: Select User Avatar (/u alias)
      operationId: users#select_avatar
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/revoke-account:
    post:
      summary: Revoke User Account (/u alias)
      operationId: users#revoke_account
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/preferences/revoke-auth-token:
    post:
      summary: Revoke User Auth Token (/u alias)
      operationId: users#revoke_auth_token
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/staff-info:
    get:
      summary: Get User Staff Info (/u alias)
      operationId: users#staff_info
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/summary:
    get:
      summary: Get User Summary (/u alias)
      operationId: users#summary # Also users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/notification_level:
    put:
      summary: Set User Notification Level (/u alias)
      operationId: users#notification_level
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/invited:
    get:
      summary: Get User Invited List (/u alias)
      operationId: users#invited
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/invited/{filter}:
    get:
      summary: Get User Invited List with Filter (/u alias)
      operationId: users#invited
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Invite filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/action/send_activation_email:
    post:
      summary: Send Activation Email (/u alias)
      operationId: users#send_activation_email
      responses:
        '200':
          description: Success
  /u/{username}/activity/topics.rss:
    get:
      summary: User Topics Feed (RSS, /u alias)
      operationId: list#user_topics_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/activity.rss:
    get:
      summary: User Activity Feed (RSS, /u alias)
      operationId: posts#user_posts_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/activity.json:
    get:
      summary: User Activity Feed (JSON, /u alias)
      operationId: posts#user_posts_feed
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/activity:
    get:
      summary: User Activity (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/activity/{filter}:
    get:
      summary: User Activity with Filter (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Activity filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/{username}/badges:
    get:
      summary: Get User Badges (/u alias)
      operationId: users#badges
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/bookmarks:
    get:
      summary: Get User Bookmarks (/u alias)
      operationId: users#bookmarks
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/user-menu-bookmarks:
    get:
      summary: Get User Menu Bookmarks (/u alias)
      operationId: users#user_menu_bookmarks
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/user-menu-private-messages:
    get:
      summary: Get User Menu Private Messages (/u alias)
      operationId: users#user_menu_messages
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/notifications:
    get:
      summary: User Notifications (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/notifications/{filter}:
    get:
      summary: User Notifications with Filter (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
        - name: filter
          in: path
          required: true
          description: Notification filter
          schema:
            type: string
      responses:
        '200':
          description: Success
  /u/by-external/{external_id}:
    get:
      summary: Get User by External ID (/u alias)
      operationId: users#show
      parameters:
        - name: external_id
          in: path
          required: true
          description: External ID
          schema:
            type: string
            pattern: "[^/]+"
      responses:
        '200':
          description: Success
  /u/by-external/{external_provider}/{external_id}:
    get:
      summary: Get User by External Provider and ID (/u alias)
      operationId: users#show
      parameters:
        - name: external_provider
          in: path
          required: true
          description: External provider name
          schema:
            type: string
        - name: external_id
          in: path
          required: true
          description: External ID
          schema:
            type: string
            pattern: "[^/]+"
      responses:
        '200':
          description: Success
  /u/{username}/deleted-posts:
    get:
      summary: User Deleted Posts (/u alias)
      operationId: users#show
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/topic-tracking-state:
    get:
      summary: Get User Topic Tracking State (/u alias)
      operationId: users#topic_tracking_state
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/private-message-topic-tracking-state:
    get:
      summary: Get User Private Message Topic Tracking State (/u alias)
      operationId: users#private_message_topic_tracking_state
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/profile-hidden:
    get:
      summary: User Profile Hidden (/u alias)
      operationId: users#profile_hidden
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/feature-topic:
    put:
      summary: Feature Topic on User Profile (/u alias)
      operationId: users#feature_topic
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/clear-featured-topic:
    put:
      summary: Clear Featured Topic on User Profile (/u alias)
      operationId: users#clear_featured_topic
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/card.json:
    get:
      summary: Get User Card (JSON, /u alias)
      operationId: users#show_card
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /u/{username}/remove-password:
    put:
      summary: Remove User Password (/u alias)
      operationId: users#remove_password
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /review:
    get:
      summary: Reviewables Index
      operationId: reviewables#index
      responses:
        '200':
          description: Success
  /review/{reviewable_id}:
    get:
      summary: Reviewable Show
      operationId: reviewables#show
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    put:
      summary: Reviewable Update
      operationId: reviewables#update
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Reviewable Destroy
      operationId: reviewables#destroy
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /review/{reviewable_id}/explain:
    get:
      summary: Reviewable Explain
      operationId: reviewables#explain
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /review/count:
    get:
      summary: Reviewables Count
      operationId: reviewables#count
      responses:
        '200':
          description: Success
  /review/topics:
    get:
      summary: Reviewable Topics
      operationId: reviewables#topics
      responses:
        '200':
          description: Success
  /review/settings:
    get:
      summary: Reviewable Settings (GET)
      operationId: reviewables#settings
      responses:
        '200':
          description: Success
    put:
      summary: Reviewable Settings (PUT)
      operationId: reviewables#settings
      responses:
        '200':
          description: Success
  /review/user-menu-list:
    get:
      summary: Reviewable User Menu List
      operationId: reviewables#user_menu_list
      responses:
        '200':
          description: Success
  /review/{reviewable_id}/perform/{action_id}:
    put:
      summary: Perform Reviewable Action
      operationId: reviewables#perform
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
        - name: action_id
          in: path
          required: true
          description: Action ID
          schema:
            type: string
            pattern: "[a-z_]+"
      responses:
        '200':
          description: Success
  /review/{reviewable_id}/scrub:
    put:
      summary: Scrub Reviewable
      operationId: reviewables#scrub
      parameters:
        - name: reviewable_id
          in: path
          required: true
          description: Reviewable ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /reviewable_claimed_topics:
    post:
      summary: Create Reviewable Claimed Topic
      operationId: reviewable_claimed_topics#create
      responses:
        '200':
          description: Success
    delete:
      summary: Destroy Reviewable Claimed Topic
      operationId: reviewable_claimed_topics#destroy
      responses:
        '200':
          description: Success
  /session/sso:
    get:
      summary: Session SSO
      operationId: session#sso
      responses:
        '200':
          description: Success
  /session/sso_login:
    get:
      summary: Session SSO Login
      operationId: session#sso_login
      responses:
        '200':
          description: Success
  /session/sso_provider:
    get:
      summary: Session SSO Provider
      operationId: session#sso_provider
      responses:
        '200':
          description: Success
  /session/current:
    get:
      summary: Get Current Session Info
      operationId: session#current
      responses:
        '200':
          description: Success
  /session/csrf:
    get:
      summary: Get CSRF Token
      operationId: session#csrf
      responses:
        '200':
          description: Success
  /session/hp:
    get:
      summary: Get Honeypot Value
      operationId: session#get_honeypot_value
      responses:
        '200':
          description: Success
  /session/email-login/{token}:
    get:
      summary: Session Email Login Info
      operationId: session#email_login_info
      parameters:
        - name: token
          in: path
          required: true
          description: Email login token
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      summary: Session Email Login
      operationId: session#email_login
      parameters:
        - name: token
          in: path
          required: true
          description: Email login token
          schema:
            type: string
      responses:
        '200':
          description: Success
  /session/otp/{token}:
    get:
      summary: Session OTP (GET)
      operationId: session#one_time_password
      parameters:
        - name: token
          in: path
          required: true
          description: One-time password token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
    post:
      summary: Session OTP (POST)
      operationId: session#one_time_password
      parameters:
        - name: token
          in: path
          required: true
          description: One-time password token
          schema:
            type: string
            pattern: "[0-9a-f]+"
      responses:
        '200':
          description: Success
  /session/2fa:
    get:
      summary: Session 2FA Show
      operationId: session#second_factor_auth_show
      responses:
        '200':
          description: Success
    post:
      summary: Session 2FA Perform
      operationId: session#second_factor_auth_perform
      responses:
        '200':
          description: Success
  /session/passkey/challenge:
    get:
      summary: Session Passkey Challenge
      operationId: session#passkey_challenge
      responses:
        '200':
          description: Success
  /session/passkey/auth:
    post:
      summary: Session Passkey Auth
      operationId: session#passkey_login
      responses:
        '200':
          description: Success
  /session/scopes:
    get:
      summary: Session Scopes
      operationId: session#scopes
      responses:
        '200':
          description: Success
  /composer/mentions:
    get:
      summary: Composer Mentions
      operationId: composer#mentions
      responses:
        '200':
          description: Success
  /composer_messages:
    get:
      summary: Composer Messages Index
      operationId: composer_messages#index
      responses:
        '200':
          description: Success
  /composer_messages/user_not_seen_in_a_while:
    get:
      summary: Composer Messages User Not Seen In A While
      operationId: composer_messages#user_not_seen_in_a_while
      responses:
        '200':
          description: Success
  /login:
    post:
      summary: Static Enter (Login)
      operationId: static#enter
      responses:
        '200':
          description: Success
    get:
      summary: Static Show Login
      operationId: static#show
      responses:
        '200':
          description: Success
  /login-required:
    get:
      summary: Static Show Login Required
      operationId: static#show
      responses:
        '200':
          description: Success
  /login-preferences:
    get:
      summary: Static Show Login Preferences
      operationId: static#show
      responses:
        '200':
          description: Success
  /signup:
    get:
      summary: Static Show Signup
      operationId: static#show
      responses:
        '200':
          description: Success
  /password-reset:
    get:
      summary: Static Show Password Reset
      operationId: static#show
      responses:
        '200':
          description: Success
  /privacy:
    get:
      summary: Static Show Privacy
      operationId: static#show
      responses:
        '200':
          description: Success
  /tos:
    get:
      summary: Static Show TOS
      operationId: static#show
      responses:
        '200':
          description: Success
  /faq:
    get:
      summary: Static Show FAQ
      operationId: static#show
      responses:
        '200':
          description: Success
  /guidelines:
    get:
      summary: Static Show Guidelines
      operationId: static#show
      responses:
        '200':
          description: Success
  /rules:
    get:
      summary: Static Show Rules
      operationId: static#show
      responses:
        '200':
          description: Success
  /conduct:
    get:
      summary: Static Show Conduct
      operationId: static#show
      responses:
        '200':
          description: Success
  /email/unsubscribe/{key}:
    get:
      summary: Email Unsubscribe
      operationId: email#unsubscribe
      parameters:
        - name: key
          in: path
          required: true
          description: Unsubscribe key
          schema:
            type: string
      responses:
        '200':
          description: Success
    post:
      summary: Email Perform Unsubscribe
      operationId: email#perform_unsubscribe
      parameters:
        - name: key
          in: path
          required: true
          description: Unsubscribe key
          schema:
            type: string
      responses:
        '200':
          description: Success
  /email/unsubscribed:
    get:
      summary: Email Unsubscribed Page
      operationId: email#unsubscribed
      responses:
        '200':
          description: Success
  /extra-locales/{digest}/{locale}/{bundle}:
    get:
      summary: Get Extra Locales
      operationId: extra_locales#show
      parameters:
        - name: digest
          in: path
          required: true
          description: Digest
          schema:
            type: string
        - name: locale
          in: path
          required: true
          description: Locale
          schema:
            type: string
        - name: bundle
          in: path
          required: true
          description: Bundle name
          schema:
            type: string
      responses:
        '200':
          description: Success
  /session:
    post:
      summary: Create Session
      operationId: session#create
      responses:
        '200':
          description: Success
  /session/forgot_password:
    post:
      summary: Session Forgot Password
      operationId: session#forgot_password
      responses:
        '200':
          description: Success
  /session/{id}:
    delete:
      summary: Destroy Session
      operationId: session#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Session ID (usually username)
          schema:
            type: string
            pattern: "[\\w.\\-]+?" # Corresponds to USERNAME_ROUTE_FORMAT
      responses:
        '200':
          description: Success
    get: # For session#become (non-production)
      summary: Become Session (Dev/Test Only)
      operationId: session#become
      parameters:
        - name: id
          in: path
          required: true
          description: Session ID (usually username)
          schema:
            type: string
            pattern: "[\\w.\\-]+?"
      responses:
        '200':
          description: Success
  /admin/config/user_fields:
    get:
      summary: Admin Config User Fields Index
      operationId: user_fields#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Config Create User Field
      operationId: user_fields#create
      responses:
        '200':
          description: Success
    put:
      summary: Admin Config Update User Field
      operationId: user_fields#update # Assuming update from resources
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Config Delete User Field
      operationId: user_fields#destroy # Assuming destroy from resources
      responses:
        '200':
          description: Success
  /admin/config/user_fields/new:
    get:
      summary: Admin Config New User Field
      operationId: user_fields#index # Or user_fields#new based on controller
      responses:
        '200':
          description: Success
  /admin/config/user_fields/{id}:
    get:
      summary: Admin Config User Field Show
      operationId: user_fields#show
      parameters:
        - name: id
          in: path
          required: true
          description: User Field ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/config/user_fields/{id}/edit:
    get:
      summary: Admin Config User Field Edit
      operationId: user_fields#edit
      parameters:
        - name: id
          in: path
          required: true
          description: User Field ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/config/emoji:
    get:
      summary: Admin Config Emoji Index
      operationId: emoji#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Config Create Emoji
      operationId: emoji#create
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Config Delete Emoji
      operationId: emoji#destroy # Assuming destroy from resources
      responses:
        '200':
          description: Success
  /admin/config/emoji/new:
    get:
      summary: Admin Config New Emoji
      operationId: emoji#index # Or emoji#new
      responses:
        '200':
          description: Success
  /admin/config/emoji/settings:
    get:
      summary: Admin Config Emoji Settings
      operationId: emoji#index
      responses:
        '200':
          description: Success
  /admin/config/permalinks: # This is within /admin/config scope
    get:
      summary: Admin Config Permalinks Index (Scoped)
      operationId: permalinks#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Config Create Permalink (Scoped)
      operationId: permalinks#create
      responses:
        '200':
          description: Success
  /admin/config/permalinks/new:
    get:
      summary: Admin Config New Permalink (Scoped)
      operationId: permalinks#new
      responses:
        '200':
          description: Success
  /admin/config/permalinks/{id}: # This is within /admin/config scope
    get:
      summary: Admin Config Permalink Show (Scoped)
      operationId: permalinks#show
      parameters:
        - name: id
          in: path
          required: true
          description: Permalink ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Config Delete Permalink (Scoped)
      operationId: permalinks#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Permalink ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/section/{section_id}:
    get:
      summary: Admin Section Show
      operationId: section#show
      parameters:
        - name: section_id
          in: path
          required: true
          description: Section ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/admin_notices/{id}:
    delete:
      summary: Admin Delete Admin Notice
      operationId: admin_notices#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Admin Notice ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/unknown_reviewables/destroy:
    delete:
      summary: Admin Destroy Unknown Reviewables
      operationId: unknown_reviewables#destroy
      responses:
        '200':
          description: Success
  /admin/badges:
    get:
      summary: Admin Badges Index
      operationId: badges#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Badge
      operationId: badges#create
      responses:
        '200':
          description: Success
  /admin/badges/new:
    get:
      summary: Admin New Badge
      operationId: badges#new
      responses:
        '200':
          description: Success
  /admin/badges/{id}:
    get:
      summary: Admin Badge Show
      operationId: badges#show
      parameters:
        - name: id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin Update Badge
      operationId: badges#update
      parameters:
        - name: id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Badge
      operationId: badges#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/badges/award/{badge_id}:
    get:
      summary: Admin Award Badge (GET)
      operationId: badges#award
      parameters:
        - name: badge_id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    post:
      summary: Admin Mass Award Badge (POST)
      operationId: badges#mass_award
      parameters:
        - name: badge_id
          in: path
          required: true
          description: Badge ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/badges/types:
    get:
      summary: Admin Badge Types
      operationId: badges#badge_types
      responses:
        '200':
          description: Success
  /admin/badges/badge_groupings:
    post:
      summary: Admin Save Badge Groupings
      operationId: badges#save_badge_groupings
      responses:
        '200':
          description: Success
  /admin/badges/preview:
    post:
      summary: Admin Preview Badge
      operationId: badges#preview
      responses:
        '200':
          description: Success
  /admin/groups/settings:
    get:
      summary: Admin Group Settings
      operationId: site_settings#index # Assuming it maps to site_settings
      responses:
        '200':
          description: Success
  /admin/search/all:
    get:
      summary: Admin Search All
      operationId: search#index
      responses:
        '200':
          description: Success
  /admin/config/site_settings:
    get:
      summary: Admin Config Site Settings
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/analytics-and-seo:
    get:
      summary: Admin Config Analytics and SEO
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/content:
    get:
      summary: Admin Config Content
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/content/sharing:
    get:
      summary: Admin Config Content Sharing
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/content/posts-and-topics:
    get:
      summary: Admin Config Content Posts and Topics
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/content/stats-and-thresholds:
    get:
      summary: Admin Config Content Stats and Thresholds
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/developer:
    get:
      summary: Admin Config Developer
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/files:
    get:
      summary: Admin Config Files
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/interface:
    get:
      summary: Admin Config Interface
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/legal:
    get:
      summary: Admin Config Legal
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/localization:
    get:
      summary: Admin Config Localization
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/login-and-authentication:
    get:
      summary: Admin Config Login and Authentication
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/navigation:
    get:
      summary: Admin Config Navigation
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/notifications:
    get:
      summary: Admin Config Notifications
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/rate-limits:
    get:
      summary: Admin Config Rate Limits
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/onebox:
    get:
      summary: Admin Config Onebox
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/search:
    get:
      summary: Admin Config Search
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/security:
    get:
      summary: Admin Config Security
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/site-admin:
    get:
      summary: Admin Config Site Admin
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/spam:
    get:
      summary: Admin Config Spam
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/user-api:
    get:
      summary: Admin Config User API
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/user-defaults:
    get:
      summary: Admin Config User Defaults
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/experimental:
    get:
      summary: Admin Config Experimental
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/trust-levels:
    get:
      summary: Admin Config Trust Levels
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/group-permissions:
    get:
      summary: Admin Config Group Permissions
      operationId: site_settings#index
      responses:
        '200':
          description: Success
  /admin/config/logo:
    get:
      summary: Admin Config Logo Index
      operationId: logo#index
      responses:
        '200':
          description: Success
    put:
      summary: Admin Config Logo Update
      operationId: logo#update
      responses:
        '200':
          description: Success
  /admin/config/fonts:
    get:
      summary: Admin Config Fonts Index
      operationId: fonts#index
      responses:
        '200':
          description: Success
    put:
      summary: Admin Config Fonts Update
      operationId: fonts#update
      responses:
        '200':
          description: Success
  /admin/config/colors/{id}:
    get:
      summary: Admin Config Color Palette Show
      operationId: color_palettes#show
      parameters:
        - name: id
          in: path
          required: true
          description: Color Palette ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/config/colors:
    get:
      summary: Admin Config Color Palettes Index
      operationId: color_palettes#index
      responses:
        '200':
          description: Success
  /admin/config/flags:
    get:
      summary: Admin Config Flags Index
      operationId: flags#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Config Create Flag
      operationId: flags#create
      responses:
        '200':
          description: Success
  /admin/config/flags/new:
    get:
      summary: Admin Config New Flag
      operationId: flags#new
      responses:
        '200':
          description: Success
  /admin/config/flags/{id}:
    get:
      summary: Admin Config Edit Flag
      operationId: flags#edit
      parameters:
        - name: id
          in: path
          required: true
          description: Flag ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin Config Update Flag
      operationId: flags#update
      parameters:
        - name: id
          in: path
          required: true
          description: Flag ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Config Delete Flag
      operationId: flags#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Flag ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/config/flags/{id}/toggle:
    put:
      summary: Admin Config Toggle Flag
      operationId: flags#toggle
      parameters:
        - name: id
          in: path
          required: true
          description: Flag ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/config/flags/{id}/reorder/{direction}:
    put:
      summary: Admin Config Reorder Flag
      operationId: flags#reorder
      parameters:
        - name: id
          in: path
          required: true
          description: Flag ID
          schema:
            type: string # Assuming ID can be non-numeric
        - name: direction
          in: path
          required: true
          description: Reorder direction
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/config/about:
    get:
      summary: Admin Config About Index
      operationId: about#index
      responses:
        '200':
          description: Success
    put:
      summary: Admin Config About Update
      operationId: about#update
      responses:
        '200':
          description: Success
  /admin/config/customize:
    get:
      summary: Admin Config Customize Index
      operationId: customize#index
      responses:
        '200':
          description: Success
  /admin/config/customize/themes:
    get:
      summary: Admin Config Customize Themes
      operationId: customize#themes
      responses:
        '200':
          description: Success
  /admin/config/customize/components:
    get:
      summary: Admin Config Customize Components
      operationId: customize#components
      responses:
        '200':
          description: Success
  /admin/version_check:
    get:
      summary: Admin Version Check
      operationId: versions#show
      responses:
        '200':
          description: Success
  /admin/dashboard:
    get:
      summary: Admin Dashboard Index
      operationId: dashboard#index
      responses:
        '200':
          description: Success
  /admin/dashboard/general:
    get:
      summary: Admin Dashboard General
      operationId: dashboard#general
      responses:
        '200':
          description: Success
  /admin/dashboard/moderation:
    get:
      summary: Admin Dashboard Moderation
      operationId: dashboard#moderation
      responses:
        '200':
          description: Success
  /admin/dashboard/security:
    get:
      summary: Admin Dashboard Security
      operationId: dashboard#security
      responses:
        '200':
          description: Success
  /admin/dashboard/reports:
    get:
      summary: Admin Dashboard Reports
      operationId: dashboard#reports
      responses:
        '200':
          description: Success
  /admin/dashboard/whats-new:
    get:
      summary: Admin Dashboard Whats New
      operationId: dashboard#new_features
      responses:
        '200':
          description: Success
  /admin/whats-new:
    get:
      summary: Admin Whats New (Alias)
      operationId: dashboard#new_features
      responses:
        '200':
          description: Success
  /admin/toggle-feature:
    post:
      summary: Admin Toggle Feature
      operationId: dashboard#toggle_feature
      responses:
        '200':
          description: Success
  /admin/dashboard/problems:
    get:
      summary: Admin Dashboard Problems
      operationId: dashboard#problems
      responses:
        '200':
          description: Success
  /admin/api:
    get:
      summary: Admin API Index
      operationId: api#index
      responses:
        '200':
          description: Success
  /admin/api/keys:
    get:
      summary: Admin API Keys Index
      operationId: api#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin API Create Key
      operationId: api#create
      responses:
        '200':
          description: Success
  /admin/api/keys/scopes:
    get:
      summary: Admin API Key Scopes
      operationId: api#scopes
      responses:
        '200':
          description: Success
  /admin/api/keys/{id}:
    get:
      summary: Admin API Key Show
      operationId: api#show
      parameters:
        - name: id
          in: path
          required: true
          description: API Key ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin API Key Update
      operationId: api#update
      parameters:
        - name: id
          in: path
          required: true
          description: API Key ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin API Key Destroy
      operationId: api#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: API Key ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/keys/{id}/revoke:
    post:
      summary: Admin API Key Revoke
      operationId: api#revoke_key
      parameters:
        - name: id
          in: path
          required: true
          description: API Key ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/keys/{id}/undo-revoke:
    post:
      summary: Admin API Key Undo Revoke
      operationId: api#undo_revoke_key
      parameters:
        - name: id
          in: path
          required: true
          description: API Key ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks:
    get:
      summary: Admin Web Hooks Index
      operationId: web_hooks#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Web Hook
      operationId: web_hooks#create
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{id}:
    get:
      summary: Admin Web Hook Show
      operationId: web_hooks#show
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin Web Hook Update
      operationId: web_hooks#update
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Web Hook Destroy
      operationId: web_hooks#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{id}/edit:
    get:
      summary: Admin Web Hook Edit
      operationId: web_hooks#edit
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hook_events/{id}:
    get:
      summary: Admin List Web Hook Events
      operationId: web_hooks#list_events
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{id}/events/bulk:
    get:
      summary: Admin Web Hook Bulk Events
      operationId: web_hooks#bulk_events
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{web_hook_id}/events/{event_id}/redeliver:
    post:
      summary: Admin Redeliver Web Hook Event
      operationId: web_hooks#redeliver_event
      parameters:
        - name: web_hook_id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
        - name: event_id
          in: path
          required: true
          description: Event ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{id}/events/failed_redeliver:
    post:
      summary: Admin Redeliver Failed Web Hook Events
      operationId: web_hooks#redeliver_failed_events
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/api/web_hooks/{id}/ping:
    post:
      summary: Admin Ping Web Hook
      operationId: web_hooks#ping
      parameters:
        - name: id
          in: path
          required: true
          description: Web Hook ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/backups:
    get:
      summary: Admin Backups Index
      operationId: backups#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Backup
      operationId: backups#create
      responses:
        '200':
          description: Success
  /admin/backups/create-multipart:
    post:
      summary: Admin Create Multipart Backup
      operationId: backups#create_multipart
      responses:
        '200':
          description: Success
  /admin/backups/complete-multipart:
    post:
      summary: Admin Complete Multipart Backup
      operationId: backups#complete_multipart
      responses:
        '200':
          description: Success
  /admin/backups/abort-multipart:
    post:
      summary: Admin Abort Multipart Backup
      operationId: backups#abort_multipart
      responses:
        '200':
          description: Success
  /admin/backups/batch-presign-multipart-parts:
    post:
      summary: Admin Batch Presign Multipart Backup Parts
      operationId: backups#batch_presign_multipart_parts
      responses:
        '200':
          description: Success
  /admin/backups/logs:
    get:
      summary: Admin Backup Logs
      operationId: backups#logs
      responses:
        '200':
          description: Success
  /admin/backups/settings:
    get:
      summary: Admin Backup Settings
      operationId: backups#index # Assuming it maps to index
      responses:
        '200':
          description: Success
  /admin/backups/status:
    get:
      summary: Admin Backup Status
      operationId: backups#status
      responses:
        '200':
          description: Success
  /admin/backups/cancel:
    delete:
      summary: Admin Cancel Backup
      operationId: backups#cancel
      responses:
        '200':
          description: Success
  /admin/backups/rollback:
    post:
      summary: Admin Rollback Backup
      operationId: backups#rollback
      responses:
        '200':
          description: Success
  /admin/backups/readonly:
    put:
      summary: Admin Set Backup Readonly Mode
      operationId: backups#readonly
      responses:
        '200':
          description: Success
  /admin/backups/upload:
    get:
      summary: Admin Check Backup Chunk
      operationId: backups#check_backup_chunk
      responses:
        '200':
          description: Success
    post:
      summary: Admin Upload Backup Chunk
      operationId: backups#upload_backup_chunk
      responses:
        '200':
          description: Success
  /admin/backups/upload_url:
    get:
      summary: Admin Create Backup Upload URL
      operationId: backups#create_upload_url
      responses:
        '200':
          description: Success
  /admin/backups/{id}:
    get:
      summary: Admin Backup Show
      operationId: backups#show
      parameters:
        - name: id
          in: path
          required: true
          description: Backup ID (filename)
          schema:
            type: string
            pattern: ".+\\.(sql\\.gz|tar\\.gz|tgz)"
      responses:
        '200':
          description: Success
    put:
      summary: Admin Email Backup
      operationId: backups#email
      parameters:
        - name: id
          in: path
          required: true
          description: Backup ID (filename)
          schema:
            type: string
            pattern: ".+\\.(sql\\.gz|tar\\.gz|tgz)"
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Backup
      operationId: backups#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Backup ID (filename)
          schema:
            type: string
            pattern: ".+\\.(sql\\.gz|tar\\.gz|tgz)"
      responses:
        '200':
          description: Success
  /admin/backups/{id}/restore:
    post:
      summary: Admin Restore Backup
      operationId: backups#restore
      parameters:
        - name: id
          in: path
          required: true
          description: Backup ID (filename)
          schema:
            type: string
            pattern: ".+\\.(sql\\.gz|tar\\.gz|tgz)"
      responses:
        '200':
          description: Success
  /admin/customize/form-templates:
    get:
      summary: Admin Form Templates Index
      operationId: form_templates#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Form Templates Create
      operationId: form_templates#create
      responses:
        '200':
          description: Success
  /admin/customize/form-templates/preview:
    get:
      summary: Admin Form Templates Preview
      operationId: form_templates#preview
      responses:
        '200':
          description: Success
  /admin/customize/form-templates/{id}:
    get:
      summary: Admin Form Template Show
      operationId: form_templates#show
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin Form Template Update
      operationId: form_templates#update
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Form Template Destroy
      operationId: form_templates#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Form Template ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/customize/themes/{id}/export:
    get:
      summary: Admin Theme Export
      operationId: themes#export
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/customize/themes/{id}/schema/{setting_name}:
    get:
      summary: Admin Theme Schema
      operationId: themes#schema
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
        - name: setting_name
          in: path
          required: true
          description: Setting Name
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/customize/components/{id}/schema/{setting_name}:
    get:
      summary: Admin Theme Component Schema
      operationId: themes#schema # Assuming this maps to themes controller
      parameters:
        - name: id
          in: path
          required: true
          description: Component ID
          schema:
            type: string
        - name: setting_name
          in: path
          required: true
          description: Setting Name
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/customize/site_texts:
    get:
      summary: Admin Site Texts Index
      operationId: site_texts#index
      responses:
        '200':
          description: Success
  /admin/customize/site_texts/{id}.json:
    get:
      summary: Admin Site Text Show (JSON)
      operationId: site_texts#show
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
    put:
      summary: Admin Site Text Update (JSON)
      operationId: site_texts#update
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Site Text Revert (JSON)
      operationId: site_texts#revert
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
  /admin/customize/site_texts/{id}:
    get:
      summary: Admin Site Text Show
      operationId: site_texts#show
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
    put:
      summary: Admin Site Text Update
      operationId: site_texts#update
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Site Text Revert
      operationId: site_texts#revert
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
  /admin/customize/site_texts/{id}/dismiss_outdated:
    put:
      summary: Admin Site Text Dismiss Outdated
      operationId: site_texts#dismiss_outdated
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
  /admin/customize/site_texts/{id}/dismiss_outdated.json:
    put:
      summary: Admin Site Text Dismiss Outdated (JSON)
      operationId: site_texts#dismiss_outdated
      parameters:
        - name: id
          in: path
          required: true
          description: Site Text ID
          schema:
            type: string
            pattern: "[\\w.\\-\\+\\%\\&]+"
      responses:
        '200':
          description: Success
  /admin/customize/reseed:
    get:
      summary: Admin Get Reseed Options
      operationId: site_texts#get_reseed_options
      responses:
        '200':
          description: Success
    post:
      summary: Admin Reseed Site Texts
      operationId: site_texts#reseed
      responses:
        '200':
          description: Success
  /admin/customize/robots:
    get:
      summary: Admin Robots.txt Show
      operationId: robots_txt#show
      responses:
        '200':
          description: Success
  /admin/customize/robots.json:
    put:
      summary: Admin Robots.txt Update
      operationId: robots_txt#update
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Robots.txt Reset
      operationId: robots_txt#reset
      responses:
        '200':
          description: Success
  /admin/customize/email_style:
    get:
      summary: Admin Email Style Show
      operationId: email_style#show
      responses:
        '200':
          description: Success
    put:
      summary: Admin Email Style Update
      operationId: email_style#update
      responses:
        '200':
          description: Success
  /admin/customize/email_style/{field}:
    get:
      summary: Admin Email Style Field Show
      operationId: email_styles#show # Note: controller is email_styles plural
      parameters:
        - name: field
          in: path
          required: true
          description: Email style field (html or css)
          schema:
            type: string
            pattern: "html|css"
      responses:
        '200':
          description: Success
  /admin/embeddable_hosts:
    post:
      summary: Admin Create Embeddable Host
      operationId: embeddable_hosts#create
      responses:
        '200':
          description: Success
  /admin/embeddable_hosts/{id}:
    put:
      summary: Admin Update Embeddable Host
      operationId: embeddable_hosts#update
      parameters:
        - name: id
          in: path
          required: true
          description: Embeddable Host ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Embeddable Host
      operationId: embeddable_hosts#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Embeddable Host ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/color_schemes:
    get:
      summary: Admin Color Schemes Index
      operationId: color_schemes#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Color Scheme
      operationId: color_schemes#create
      responses:
        '200':
          description: Success
  /admin/color_schemes/{id}:
    put:
      summary: Admin Update Color Scheme
      operationId: color_schemes#update
      parameters:
        - name: id
          in: path
          required: true
          description: Color Scheme ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Color Scheme
      operationId: color_schemes#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Color Scheme ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/permalinks:
    get:
      summary: Admin Permalinks Index
      operationId: permalinks#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Permalink
      operationId: permalinks#create
      responses:
        '200':
          description: Success
  /admin/permalinks/{id}:
    get:
      summary: Admin Permalink Show
      operationId: permalinks#show
      parameters:
        - name: id
          in: path
          required: true
          description: Permalink ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    put:
      summary: Admin Update Permalink
      operationId: permalinks#update
      parameters:
        - name: id
          in: path
          required: true
          description: Permalink ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Permalink
      operationId: permalinks#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Permalink ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/customize/watched_words:
    get:
      summary: Admin Watched Words Index
      operationId: watched_words#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Create Watched Word
      operationId: watched_words#create
      responses:
        '200':
          description: Success
  /admin/customize/watched_words/{id}:
    delete:
      summary: Admin Delete Watched Word
      operationId: watched_words#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Watched Word ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/customize/watched_words/action/{id}:
    get:
      summary: Admin Watched Words Action Index
      operationId: watched_words#index # Assuming it maps to index
      parameters:
        - name: id
          in: path
          required: true
          description: Action ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Watched Words Clear All by Action
      operationId: watched_words#clear_all
      parameters:
        - name: id
          in: path
          required: true
          description: Action ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/customize/watched_words/action/{id}/download:
    get:
      summary: Admin Watched Words Download by Action
      operationId: watched_words#download
      parameters:
        - name: id
          in: path
          required: true
          description: Action ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/customize/watched_words/upload:
    post:
      summary: Admin Watched Words Upload
      operationId: watched_words#upload
      responses:
        '200':
          description: Success
  /admin/logs:
    get:
      summary: Admin Staff Action Logs Index
      operationId: staff_action_logs#index
      responses:
        '200':
          description: Success
  /admin/logs/staff_action_logs:
    get:
      summary: Admin Staff Action Logs Index (Explicit)
      operationId: staff_action_logs#index
      responses:
        '200':
          description: Success
  /admin/logs/staff_action_logs/{id}/diff:
    get:
      summary: Admin Staff Action Log Diff
      operationId: staff_action_logs#diff
      parameters:
        - name: id
          in: path
          required: true
          description: Log ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/logs/screened_emails:
    get:
      summary: Admin Screened Emails Index
      operationId: screened_emails#index
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Screened Emails Destroy
      operationId: screened_emails#destroy
      responses:
        '200':
          description: Success
  /admin/logs/screened_ip_addresses:
    get:
      summary: Admin Screened IP Addresses Index
      operationId: screened_ip_addresses#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Screened IP Addresses Create
      operationId: screened_ip_addresses#create
      responses:
        '200':
          description: Success
    put:
      summary: Admin Screened IP Addresses Update
      operationId: screened_ip_addresses#update
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Screened IP Addresses Destroy
      operationId: screened_ip_addresses#destroy
      responses:
        '200':
          description: Success
  /admin/logs/screened_urls:
    get:
      summary: Admin Screened URLs Index
      operationId: screened_urls#index
      responses:
        '200':
          description: Success
  /admin/logs/search_logs:
    get:
      summary: Admin Search Logs Index
      operationId: search_logs#index
      responses:
        '200':
          description: Success
  /admin/logs/search_logs/term:
    get:
      summary: Admin Search Logs Term
      operationId: search_logs#term
      responses:
        '200':
          description: Success
  /admin/customize:
    get:
      summary: Admin Customize Index (Color Schemes)
      operationId: color_schemes#index
      responses:
        '200':
          description: Success
  /admin/customize/themes:
    get:
      summary: Admin Customize Themes Index
      operationId: themes#index
      responses:
        '200':
          description: Success
  /admin/customize/components:
    get:
      summary: Admin Customize Components Index
      operationId: themes#index
      responses:
        '200':
          description: Success
  /admin/customize/theme-components:
    get:
      summary: Admin Customize Theme Components Index
      operationId: themes#index
      responses:
        '200':
          description: Success
  /admin/customize/colors:
    get:
      summary: Admin Customize Colors Index
      operationId: color_schemes#index
      responses:
        '200':
          description: Success
  /admin/customize/colors/{id}:
    get:
      summary: Admin Customize Color Scheme Show
      operationId: color_schemes#index # Or show, based on controller
      parameters:
        - name: id
          in: path
          required: true
          description: Color Scheme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/config/permalinks:
    get:
      summary: Admin Config Permalinks Index
      operationId: permalinks#index
      responses:
        '200':
          description: Success
  /admin/customize/embedding:
    get:
      summary: Admin Customize Embedding Show
      operationId: embedding#show
      responses:
        '200':
          description: Success
    put:
      summary: Admin Customize Embedding Update
      operationId: embedding#update
      responses:
        '200':
          description: Success
  /admin/customize/embedding/{id}:
    get:
      summary: Admin Customize Embedding Edit
      operationId: embedding#edit
      parameters:
        - name: id
          in: path
          required: true
          description: Embedding ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/themes:
    get:
      summary: Admin Themes Index
      operationId: themes#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Themes Create
      operationId: themes#create
      responses:
        '200':
          description: Success
  /admin/themes/import:
    post:
      summary: Admin Themes Import
      operationId: themes#import
      responses:
        '200':
          description: Success
  /admin/themes/upload_asset:
    post:
      summary: Admin Themes Upload Asset
      operationId: themes#upload_asset
      responses:
        '200':
          description: Success
  /admin/themes/generate_key_pair:
    post:
      summary: Admin Themes Generate Key Pair
      operationId: themes#generate_key_pair
      responses:
        '200':
          description: Success
  /admin/themes/bulk_destroy:
    delete:
      summary: Admin Themes Bulk Destroy
      operationId: themes#bulk_destroy
      responses:
        '200':
          description: Success
  /admin/themes/{id}:
    get:
      summary: Admin Theme Show
      operationId: themes#show
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Admin Theme Update
      operationId: themes#update
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Theme Destroy
      operationId: themes#destroy
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/themes/{id}/preview:
    get:
      summary: Admin Theme Preview
      operationId: themes#preview
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/themes/{id}/translations/{locale}:
    get:
      summary: Admin Theme Get Translations
      operationId: themes#get_translations
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
        - name: locale
          in: path
          required: true
          description: Locale
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/themes/{id}/setting:
    put:
      summary: Admin Theme Update Single Setting
      operationId: themes#update_single_setting
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/themes/{id}/objects_setting_metadata/{setting_name}:
    get:
      summary: Admin Theme Objects Setting Metadata
      operationId: themes#objects_setting_metadata
      parameters:
        - name: id
          in: path
          required: true
          description: Theme ID
          schema:
            type: string
        - name: setting_name
          in: path
          required: true
          description: Setting Name
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/impersonate:
    get:
      summary: Admin Impersonate Index
      operationId: impersonate#index
      responses:
        '200':
          description: Success
    post:
      summary: Admin Impersonate Create
      operationId: impersonate#create
      responses:
        '200':
          description: Success
  /admin/email:
    get:
      summary: Admin Email Index
      operationId: email#index
      responses:
        '200':
          description: Success
  /admin/email/server-settings:
    get:
      summary: Admin Email Server Settings
      operationId: email#server_settings
      responses:
        '200':
          description: Success
  /admin/email/test:
    post:
      summary: Admin Email Test
      operationId: email#test
      responses:
        '200':
          description: Success
  /admin/email/preview-digest:
    get:
      summary: Admin Email Preview Digest
      operationId: email#preview_digest
      responses:
        '200':
          description: Success
  /admin/email/send-digest:
    post:
      summary: Admin Email Send Digest
      operationId: email#send_digest
      responses:
        '200':
          description: Success
  /admin/email/smtp_should_reject:
    get:
      summary: Admin Email SMTP Should Reject
      operationId: email#smtp_should_reject
      responses:
        '200':
          description: Success
  /admin/email/handle_mail:
    post:
      summary: Admin Email Handle Mail
      operationId: email#handle_mail
      responses:
        '200':
          description: Success
  /admin/email/advanced-test:
    get:
      summary: Admin Email Advanced Test (GET)
      operationId: email#advanced_test
      responses:
        '200':
          description: Success
    post:
      summary: Admin Email Advanced Test (POST)
      operationId: email#advanced_test
      responses:
        '200':
          description: Success
  /admin/email/templates:
    get:
      summary: Admin Email Templates Index
      operationId: email_templates#index
      responses:
        '200':
          description: Success
  /admin/email/templates/{id}:
    get:
      summary: Admin Email Template Show
      operationId: email_templates#show
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: string
            pattern: "[0-9a-z_.]+"
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Email Template Revert
      operationId: email_templates#revert
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: string
            pattern: "[0-9a-z_.]+"
      responses:
        '200':
          description: Success
    put:
      summary: Admin Email Template Update
      operationId: email_templates#update
      parameters:
        - name: id
          in: path
          required: true
          description: Template ID
          schema:
            type: string
            pattern: "[0-9a-z_.]+"
      responses:
        '200':
          description: Success
  /admin/email-logs:
    get:
      summary: Admin Email Logs Index
      operationId: email_logs#index
      responses:
        '200':
          description: Success
  /admin/email-logs/sent:
    get:
      summary: Admin Email Logs Sent
      operationId: email_logs#sent
      responses:
        '200':
          description: Success
  /admin/email-logs/skipped:
    get:
      summary: Admin Email Logs Skipped
      operationId: email_logs#skipped
      responses:
        '200':
          description: Success
  /admin/email-logs/bounced:
    get:
      summary: Admin Email Logs Bounced
      operationId: email_logs#bounced
      responses:
        '200':
          description: Success
  /admin/email-logs/received:
    get:
      summary: Admin Email Logs Received
      operationId: email_logs#received
      responses:
        '200':
          description: Success
  /admin/email-logs/rejected:
    get:
      summary: Admin Email Logs Rejected
      operationId: email_logs#rejected
      responses:
        '200':
          description: Success
  /admin/email-logs/incoming/{id}:
    get:
      summary: Admin Email Logs Incoming
      operationId: email_logs#incoming
      parameters:
        - name: id
          in: path
          required: true
          description: Log ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/email-logs/incoming_from_bounced/{id}:
    get:
      summary: Admin Email Logs Incoming from Bounced
      operationId: email_logs#incoming_from_bounced
      parameters:
        - name: id
          in: path
          required: true
          description: Log ID
          schema:
            type: string # Assuming ID can be non-numeric
      responses:
        '200':
          description: Success
  /admin/users:
    get:
      summary: Admin List Users
      operationId: users#index
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete User
      operationId: users#destroy
      responses:
        '200':
          description: Success
  /admin/users/list:
    get:
      summary: Admin List Users (Alias)
      operationId: users#index
      responses:
        '200':
          description: Success
  /admin/users/list/{query}:
    get:
      summary: Admin List Users with Query
      operationId: users#index
      parameters:
        - name: query
          in: path
          required: true
          description: Search query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/ip-info:
    get:
      summary: Admin Get IP Info
      operationId: users#ip_info
      responses:
        '200':
          description: Success
  /admin/users/delete-others-with-same-ip:
    delete:
      summary: Admin Delete Others with Same IP
      operationId: users#delete_other_accounts_with_same_ip
      responses:
        '200':
          description: Success
  /admin/users/total-others-with-same-ip:
    get:
      summary: Admin Total Others with Same IP
      operationId: users#total_other_accounts_with_same_ip
      responses:
        '200':
          description: Success
  /admin/users/approve-bulk:
    put:
      summary: Admin Approve Users Bulk
      operationId: users#approve_bulk
      responses:
        '200':
          description: Success
  /admin/users/destroy-bulk:
    delete:
      summary: Admin Destroy Users Bulk
      operationId: users#destroy_bulk
      responses:
        '200':
          description: Success
  /admin/users/{username}/penalty_history:
    delete:
      summary: Admin Delete User Penalty History
      operationId: users#penalty_history
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/suspend:
    put:
      summary: Admin Suspend User
      operationId: users#suspend
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/delete_posts_batch:
    put:
      summary: Admin Delete User Posts Batch
      operationId: users#delete_posts_batch
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/unsuspend:
    put:
      summary: Admin Unsuspend User
      operationId: users#unsuspend
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/revoke_admin:
    put:
      summary: Admin Revoke Admin
      operationId: users#revoke_admin
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/grant_admin:
    put:
      summary: Admin Grant Admin
      operationId: users#grant_admin
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/revoke_moderation:
    put:
      summary: Admin Revoke Moderation
      operationId: users#revoke_moderation
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/grant_moderation:
    put:
      summary: Admin Grant Moderation
      operationId: users#grant_moderation
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/approve:
    put:
      summary: Admin Approve User
      operationId: users#approve
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/log_out:
    post:
      summary: Admin Log Out User
      operationId: users#log_out
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/activate:
    put:
      summary: Admin Activate User
      operationId: users#activate
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/deactivate:
    put:
      summary: Admin Deactivate User
      operationId: users#deactivate
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/silence:
    put:
      summary: Admin Silence User
      operationId: users#silence
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/unsilence:
    put:
      summary: Admin Unsilence User
      operationId: users#unsilence
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/trust_level:
    put:
      summary: Admin Set User Trust Level
      operationId: users#trust_level
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/trust_level_lock:
    put:
      summary: Admin Lock User Trust Level
      operationId: users#trust_level_lock
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/primary_group:
    put:
      summary: Admin Set User Primary Group
      operationId: users#primary_group
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/groups:
    post:
      summary: Admin Add User to Group
      operationId: users#add_group
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/groups/{group_id}:
    delete:
      summary: Admin Remove User from Group
      operationId: users#remove_group
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
        - name: group_id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/badges:
    get:
      summary: Admin Get User Badges
      operationId: users#badges
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/leader_requirements:
    get:
      summary: Admin Get User TL3 Requirements (Leader)
      operationId: users#tl3_requirements
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/tl3_requirements:
    get:
      summary: Admin Get User TL3 Requirements
      operationId: users#tl3_requirements
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/anonymize:
    put:
      summary: Admin Anonymize User
      operationId: users#anonymize
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/merge:
    post:
      summary: Admin Merge User
      operationId: users#merge
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/reset-bounce-score:
    post:
      summary: Admin Reset User Bounce Score
      operationId: users#reset_bounce_score
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/disable_second_factor:
    put:
      summary: Admin Disable User Second Factor
      operationId: users#disable_second_factor
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/sso_record:
    delete:
      summary: Admin Delete User SSO Record
      operationId: users#sso_record
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/similar-users.json:
    get:
      summary: Admin Get Similar Users
      operationId: users#similar_users
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{username}/delete_associated_accounts:
    put:
      summary: Admin Delete User Associated Accounts
      operationId: users#delete_associated_accounts
      parameters:
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{id}.json:
    get:
      summary: Admin Get User Details (JSON)
      operationId: users#show
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string # Assuming ID can be numeric or username-like
      responses:
        '200':
          description: Success
  /admin/users/{id}/{username}:
    get:
      summary: Admin Get User Details
      operationId: users#show
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{id}/{username}/badges:
    get:
      summary: Admin Get User Badges (via ID and Username)
      operationId: users#show # Or users#badges - clarify based on controller action
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/{id}/{username}/tl3_requirements:
    get:
      summary: Admin Get User TL3 Requirements (via ID and Username)
      operationId: users#show # Or users#tl3_requirements - clarify
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
        - name: username
          in: path
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/users/settings:
    get:
      summary: Admin User Settings
      operationId: site_settings#index # Assuming it maps to site_settings
      responses:
        '200':
          description: Success
  /admin/users/sync_sso:
    post:
      summary: Admin Sync SSO
      operationId: users#sync_sso
      responses:
        '200':
          description: Success
  /admin/site_settings:
    get:
      summary: Admin Site Settings Index
      operationId: site_settings#index
      responses:
        '200':
          description: Success
    put:
      summary: Admin Site Settings Update
      operationId: site_settings#update
      responses:
        '200':
          description: Success
  /admin/site_settings/category/{id}:
    get:
      summary: Admin Site Settings Category
      operationId: site_settings#index
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/site_settings/user_count:
    put:
      summary: Admin Site Settings User Count
      operationId: site_settings#user_count
      responses:
        '200':
          description: Success
  /admin/reports:
    get:
      summary: Admin Reports Index
      operationId: reports#index
      responses:
        '200':
          description: Success
  /admin/reports/bulk:
    get:
      summary: Admin Reports Bulk
      operationId: reports#bulk
      responses:
        '200':
          description: Success
  /admin/reports/{type}:
    get:
      summary: Admin Reports Show
      operationId: reports#show
      parameters:
        - name: type
          in: path
          required: true
          description: Report Type
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/groups:
    post:
      summary: Admin Create Group
      operationId: groups#create
      responses:
        '200':
          description: Success
    delete:
      summary: Admin Delete Group
      operationId: groups#destroy
      responses:
        '200':
          description: Success
  /admin/groups/automatic_membership_count:
    put:
      summary: Admin Group Automatic Membership Count
      operationId: groups#automatic_membership_count
      responses:
        '200':
          description: Success
  /admin/groups/{id}/owners:
    delete:
      summary: Admin Group Remove Owner
      operationId: groups#remove_owner
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/groups/{id}/primary:
    put:
      summary: Admin Group Set Primary
      operationId: groups#set_primary
      parameters:
        - name: id
          in: path
          required: true
          description: Group ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /srv/status:
    get:
      summary: Get Forum Status
      operationId: forums#status
      responses:
        '200':
          description: Success
  /wizard:
    get:
      summary: Get Wizard Index
      operationId: wizard#index
      responses:
        '200':
          description: Success
  /wizard/steps/{id}:
    get:
      summary: Get Wizard Step
      operationId: wizard#index
      parameters:
        - name: id
          in: path
          required: true
          description: Step ID
          schema:
            type: string
      responses:
        '200':
          description: Success
    put:
      summary: Update Wizard Step
      operationId: steps#update
      parameters:
        - name: id
          in: path
          required: true
          description: Step ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin:
    get:
      summary: Admin Index
      operationId: admin#index
      responses:
        '200':
          description: Success
  /admin/search:
    get:
      summary: Admin Search
      operationId: search#index
      responses:
        '200':
          description: Success
  /admin/schema/{setting_name}:
    get:
      summary: Admin Schema
      operationId: admin#index
      parameters:
        - name: setting_name
          in: path
          required: true
          description: Setting Name
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/plugins:
    get:
      summary: Admin Plugins Index
      operationId: plugins#index
      responses:
        '200':
          description: Success
  /admin/plugins/{plugin_id}:
    get:
      summary: Admin Plugin Show
      operationId: plugins#show
      parameters:
        - name: plugin_id
          in: path
          required: true
          description: Plugin ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /admin/plugins/{plugin_id}/settings:
    get:
      summary: Admin Plugin Settings
      operationId: plugins#show
      parameters:
        - name: plugin_id
          in: path
          required: true
          description: Plugin ID
          schema:
            type: string
      responses:
        '200':
          description: Success
  /pub/check-slug:
    get:
      summary: Check Slug
      operationId: published_pages#check_slug
      responses:
        '200':
          description: Success
  /pub/by-topic/{topic_id}:
    get:
      summary: Get Published Page by Topic ID
      operationId: published_pages#details
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    put:
      summary: Upsert Published Page by Topic ID
      operationId: published_pages#upsert
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      summary: Delete Published Page by Topic ID
      operationId: published_pages#destroy
      parameters:
        - name: topic_id
          in: path
          required: true
          description: Topic ID
          schema:
            type: integer
      responses:
        '200':
          description: Success
  /pub/{slug}:
    get:
      summary: Get Published Page by Slug
      operationId: published_pages#show
      parameters:
        - name: slug
          in: path
          required: true
          description: Page Slug
          schema:
            type: string
      responses:
        '200':
          description: Success
  /directory_items:
    get:
      summary: List Directory Items
      operationId: directory_items#index
      responses:
        '200':
          description: Success
  /site:
    get:
      summary: Get Site Info
      operationId: site#site
      responses:
        '200':
          description: Success
  /site/settings:
    get:
      summary: Get Site Settings
      operationId: site#settings
      responses:
        '200':
          description: Success
  /site/custom_html:
    get:
      summary: Get Site Custom HTML
      operationId: site#custom_html
      responses:
        '200':
          description: Success
  /site/banner:
    get:
      summary: Get Site Banner
      operationId: site#banner
      responses:
        '200':
          description: Success
  /site/emoji:
    get:
      summary: Get Site Emoji
      operationId: site#emoji
      responses:
        '200':
          description: Success
  /site/basic-info:
    get:
      summary: Get Site Basic Info
      operationId: site#basic_info
      responses:
        '200':
          description: Success
  /site/statistics:
    get:
      summary: Get Site Statistics
      operationId: site#statistics
      responses:
        '200':
          description: Success
  /sitemap.xml:
    get:
      summary: Sitemap Index
      operationId: sitemap#index
      responses:
        '200':
          description: Success
  /sitemap_{page}.xml:
    get:
      summary: Sitemap Page
      operationId: sitemap#page
      parameters:
        - name: page
          in: path
          required: true
          description: Page number
          schema:
            type: string
            pattern: "[1-9][0-9]*"
      responses:
        '200':
          description: Success
  /sitemap_recent.xml:
    get:
      summary: Recent Sitemap
      operationId: sitemap#recent
      responses:
        '200':
          description: Success
  /news.xml:
    get:
      summary: News Sitemap
      operationId: sitemap#news
      responses:
        '200':
          description: Success
  /about:
    get:
      summary: About Page
      operationId: about#index
      responses:
        '200':
          description: Success
  /about/live_post_counts:
    get:
      summary: Live Post Counts
      operationId: about#live_post_counts
      responses:
        '200':
          description: Success
  /finish-installation:
    get:
      summary: Finish Installation Index
      operationId: finish_installation#index
      responses:
        '200':
          description: Success
  /finish-installation/register:
    get:
      summary: Finish Installation Register (GET)
      operationId: finish_installation#register
      responses:
        '200':
          description: Success
    post:
      summary: Finish Installation Register (POST)
      operationId: finish_installation#register
      responses:
        '200':
          description: Success
  /finish-installation/confirm-email:
    get:
      summary: Finish Installation Confirm Email
      operationId: finish_installation#confirm_email
      responses:
        '200':
          description: Success
  /finish-installation/resend-email:
    put:
      summary: Finish Installation Resend Email
      operationId: finish_installation#resend_email
      responses:
        '200':
          description: Success
    post:
      summary: Not Found
      operationId: exceptions#notFound
      responses:
        '200':
          description: Success
  /404-body:
    get:
      summary: Not Found Body
      operationId: exceptions#notFoundBody
      responses:
        '200':
          description: Success
  /webhooks/aws:
    post:
      summary: AWS Webhook
      operationId: webhooks#aws
      responses:
        '200':
          description: Success
  /webhooks/mailgun:
    post:
      summary: Mailgun Webhook
      operationId: webhooks#mailgun
      responses:
        '200':
          description: Success
  /webhooks/mailjet:
    post:
      summary: Mailjet Webhook
      operationId: webhooks#mailjet
      responses:
        '200':
          description: Success
  /webhooks/mailpace:
    post:
      summary: Mailpace Webhook
      operationId: webhooks#mailpace
      responses:
        '200':
          description: Success
  /webhooks/mandrill:
    post:
      summary: Mandrill Webhook
      operationId: webhooks#mandrill
      responses:
        '200':
          description: Success
    get:
      summary: Mandrill Webhook Head
      operationId: webhooks#mandrill_head
      responses:
        '200':
          description: Success
  /webhooks/postmark:
    post:
      summary: Postmark Webhook
      operationId: webhooks#postmark
      responses:
        '200':
          description: Success
  /webhooks/sendgrid:
    post:
      summary: SendGrid Webhook
      operationId: webhooks#sendgrid
      responses:
        '200':
          description: Success
  /webhooks/sparkpost:
    post:
      summary: SparkPost Webhook
      operationId: webhooks#sparkpost
      responses:
        '200':
          description: Success
